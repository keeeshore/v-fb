{"version":3,"sources":["webpack:///admin.6ada7dd27f74950d0f7b.js","webpack:///./src/Admin.ts","webpack:///./src/app/AdminModule.ts","webpack:///./src/app/admin/controller/AdminController.ts","webpack:///./src/app/admin/controller/controller.html","webpack:///./src/app/admin/controller/controller.css","webpack:///./src/app/admin/header/Header.ts","webpack:///./src/app/admin/header/header.html","webpack:///./src/app/admin/login/Login.ts","webpack:///./src/app/admin/AuthGuard.ts","webpack:///./src/app/admin/login/login.html","webpack:///./src/app/admin/events/Events.ts","webpack:///./src/app/admin/model/PagingData.ts","webpack:///./src/app/admin/events/events.html","webpack:///./src/app/admin/albums/Albums.ts","webpack:///./src/app/admin/albums/albums.html","webpack:///./src/app/admin/posts/Posts.ts","webpack:///./src/app/admin/posts/PostCollection.ts","webpack:///./src/app/admin/posts/posts.html","webpack:///./src/app/admin/photos/Photos.ts","webpack:///./src/app/admin/photos/photos.html","webpack:///./src/app/admin/component/AdminComponent.ts","webpack:///./src/app/admin/component/component.html"],"names":["webpackJsonp","0","module","exports","__webpack_require__","1","process","Object","defineProperty","value","platform_browser_dynamic_1","core_1","AdminModule_1","enableProdMode","platformBrowserDynamic","bootstrapModule","AdminModule","call","40","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","router_1","platform_browser_1","http_1","forms_1","AdminController_1","Header_1","animations_1","Login_1","Events_1","Albums_1","Posts_1","Photos_1","AuthGuard_1","ApiService_1","AdminComponent_1","adminRoutes","path","component","AdminComponent","canActivate","AuthGuard","children","canActivateChild","Events","Albums","Posts","Photos","data","albumId","Login","NgModule","imports","BrowserModule","HttpModule","JsonpModule","FormsModule","BrowserAnimationsModule","RouterModule","forRoot","declarations","AdminController","AdminHeader","bootstrap","providers","ApiService","67","__metadata","k","v","metadata","common_1","router","route","location","console","log","prototype","ngOnInit","queryParams","subscribe","params","isNaN","id","Component","selector","template","styles","ActivatedRoute","Router","Location","73","74","75","76","80","environment_1","apiService","authGaurd","hostApi","ENV","HOST_API_URL","_REASON","reason","_this","doLogout","forEach","onLoginClick","loginModel","LoginModel","userName","password","doLogin","API_URL","82","isLoggedIn","state","url","post","response","success","navigate","err","Injectable","86","87","EventsCollection_1","PagingData_1","moment","rxjs_1","message","eventsCollection","EventsCollection","fbCollection","fromDate","toDate","format","DATE_TIME_FORMAT","accessToken","dialogSubject","Subject","getEventsFromTable","setEvents","collectionModel","eventsArray","events","map","model","endTime","end_time","startTime","start_time","eventModel","EventModel","push","onGetEventClick","Array","eventParams","EventParams","getEvents","collection","isValidDateRange","since","unix","until","FB_GRAPH_URL","FB_PROFILE_ID","URLSearchParams","append","toString","fields","limit","pretty","after","fetch","pagingData","PagingData","paging","filter","dataModel","cursors","next","JSON","stringify","onSubmitEvents1","submitEvents","addEventModel","onDeleteEvent","onUpdateEvent","setLastEndTime","total","lastModel","isValid","isBefore","210","Cursors","before","previous","498","499","PhotoCollection_1","albumCollection","AlbumCollection","501","502","PostCollection_1","postCollection","PostCollection","getPostsFromTable","setPosts","postsArray","posts","createdTime","created_time","postModel","PostModel","onGetPostsClick","postParams","PostParams","getPosts","onSubmitPosts","submitPosts","addPostModel","onDeletePosts","onUpdatePosts","503","name","uid","description","fullPicture","full_picture","504","505","albumName","albumsCollection","imageHostPath","albums","album","photoCollection","PhotoCollection","getPhotosFromTable","setPhotos","photosArr","dataArray","photos","photoModel","PhotoModel","onGetPhotosClick","photoParams","PhotoParams","getPhotos","onDeletePhotoModel","onAddPhotoModel","indexId","indexOf","splice","submitPhotos","onSubmitPhotos","isRepeat","nextUrl","506","507","508","509"],"mappings":"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","file":"admin.6ada7dd27f74950d0f7b.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 0:\n/***/ (function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n\n/***/ 1:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(3);\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar AdminModule_1 = __webpack_require__(40);\r\n\tif (process && (\"production\") === 'production') {\r\n\t    core_1.enableProdMode();\r\n\t}\r\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(AdminModule_1.AdminModule);\r\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ }),\n\n/***/ 40:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar router_1 = __webpack_require__(41);\r\n\tvar platform_browser_1 = __webpack_require__(39);\r\n\tvar http_1 = __webpack_require__(63);\r\n\tvar forms_1 = __webpack_require__(64);\r\n\tvar AdminController_1 = __webpack_require__(67);\r\n\tvar Header_1 = __webpack_require__(75);\r\n\tvar animations_1 = __webpack_require__(77);\r\n\tvar Login_1 = __webpack_require__(80);\r\n\tvar Events_1 = __webpack_require__(87);\r\n\tvar Albums_1 = __webpack_require__(499);\r\n\tvar Posts_1 = __webpack_require__(502);\r\n\tvar Photos_1 = __webpack_require__(505);\r\n\tvar AuthGuard_1 = __webpack_require__(82);\r\n\tvar ApiService_1 = __webpack_require__(81);\r\n\tvar AdminComponent_1 = __webpack_require__(507);\r\n\tvar adminRoutes = [\r\n\t    {\r\n\t        path: '',\r\n\t        component: AdminComponent_1.AdminComponent,\r\n\t        canActivate: [AuthGuard_1.AuthGuard],\r\n\t        children: [\r\n\t            {\r\n\t                path: '',\r\n\t                canActivateChild: [AuthGuard_1.AuthGuard],\r\n\t                children: [\r\n\t                    { path: 'events', component: Events_1.Events },\r\n\t                    { path: 'albums', component: Albums_1.Albums },\r\n\t                    {\r\n\t                        path: 'posts',\r\n\t                        component: Posts_1.Posts\r\n\t                    },\r\n\t                    {\r\n\t                        path: 'photos/:albumId',\r\n\t                        component: Photos_1.Photos,\r\n\t                        data: { albumId: 'albumId' }\r\n\t                    },\r\n\t                    { path: 'logout', component: Login_1.Login },\r\n\t                    { path: '', component: Login_1.Login },\r\n\t                    { path: '**', component: Login_1.Login }\r\n\t                ]\r\n\t            }\r\n\t        ]\r\n\t    },\r\n\t];\r\n\tvar AdminModule = (function () {\r\n\t    function AdminModule() {\r\n\t    }\r\n\t    return AdminModule;\r\n\t}());\r\n\tAdminModule = __decorate([\r\n\t    core_1.NgModule({\r\n\t        imports: [\r\n\t            platform_browser_1.BrowserModule,\r\n\t            http_1.HttpModule,\r\n\t            http_1.JsonpModule,\r\n\t            forms_1.FormsModule,\r\n\t            platform_browser_1.BrowserModule,\r\n\t            animations_1.BrowserAnimationsModule,\r\n\t            router_1.RouterModule.forRoot(adminRoutes)\r\n\t        ],\r\n\t        declarations: [\r\n\t            AdminController_1.AdminController,\r\n\t            AdminComponent_1.AdminComponent,\r\n\t            Header_1.AdminHeader,\r\n\t            Events_1.Events,\r\n\t            Albums_1.Albums,\r\n\t            Photos_1.Photos,\r\n\t            Posts_1.Posts,\r\n\t            Login_1.Login\r\n\t        ],\r\n\t        exports: [\r\n\t            router_1.RouterModule\r\n\t        ],\r\n\t        bootstrap: [AdminController_1.AdminController],\r\n\t        providers: [ApiService_1.ApiService, AuthGuard_1.AuthGuard]\r\n\t    })\r\n\t], AdminModule);\r\n\texports.AdminModule = AdminModule;\r\n\n\n/***/ }),\n\n/***/ 67:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar common_1 = __webpack_require__(38);\r\n\tvar router_1 = __webpack_require__(41);\r\n\t__webpack_require__(68);\r\n\tvar AdminController = (function () {\r\n\t    function AdminController(router, route, location) {\r\n\t        this.router = router;\r\n\t        this.route = route;\r\n\t        this.location = location;\r\n\t        console.log('< admin-app > Component called...');\r\n\t    }\r\n\t    AdminController.prototype.ngOnInit = function () {\r\n\t        console.log('Admin Controller::::');\r\n\t        this.router.queryParams.subscribe(function (params) {\r\n\t            console.log('ngOnInit::val------------------:', params);\r\n\t            if (!isNaN(params.id)) {\r\n\t                console.log('ngOnInit::val------------------:Valid param id', params);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    return AdminController;\r\n\t}());\r\n\tAdminController = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-admin',\r\n\t        template: __webpack_require__(73),\r\n\t        styles: [__webpack_require__(74)]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [router_1.ActivatedRoute,\r\n\t        router_1.Router,\r\n\t        common_1.Location])\r\n\t], AdminController);\r\n\texports.AdminController = AdminController;\r\n\n\n/***/ }),\n\n/***/ 73:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<!-- <div class=\\\"container\\\">\\r\\n\\t<admin-header></admin-header>\\r\\n</div>\\r\\n<router-outlet></router-outlet> -->\\r\\n<div class=\\\"container\\\">\\r\\n\\t<admin-header></admin-header>\\r\\n\\t<admin-component></admin-component>\\r\\n</div>\\r\\n\";\n\n/***/ }),\n\n/***/ 74:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"#main {}\\r\\n\"\n\n/***/ }),\n\n/***/ 75:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar AdminHeader = (function () {\r\n\t    function AdminHeader() {\r\n\t    }\r\n\t    return AdminHeader;\r\n\t}());\r\n\tAdminHeader = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'admin-header',\r\n\t        template: __webpack_require__(76)\r\n\t    })\r\n\t], AdminHeader);\r\n\texports.AdminHeader = AdminHeader;\r\n\n\n/***/ }),\n\n/***/ 76:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<header>\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t<ul class=\\\"list-inline\\\" style=\\\"border-bottom: 1px solid #CCC; padding: 10px 5px; margin-bottom: 20px;\\\">\\r\\n                <li>\\r\\n                    <!--<a routerLink=\\\"/school\\\" routerLinkActive=\\\"active\\\">School</a>-->\\r\\n                   <!--  <a [routerLink]=\\\"['/events']\\\">Events</a> -->\\r\\n                    <a routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">Events</a>\\r\\n                </li>\\r\\n\\t\\t\\t\\t<li>\\r\\n                    <!-- <a [routerLink]=\\\"['/posts']\\\">Posts</a> -->\\r\\n                    <a routerLink=\\\"/posts\\\" routerLinkActive=\\\"active\\\">Posts</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a [routerLink]=\\\"['/albums']\\\">Albums</a>\\r\\n                </li>\\r\\n                 <li style=\\\"float: right;\\\">\\r\\n                    <a [routerLink]=\\\"['/']\\\">Log out</a>\\r\\n                </li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</header>\\r\\n\";\n\n/***/ }),\n\n/***/ 80:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t/**\r\n\t * Created by balank on 8/09/2017.\r\n\t */\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar ApiService_1 = __webpack_require__(81);\r\n\tvar AuthGuard_1 = __webpack_require__(82);\r\n\tvar environment_1 = __webpack_require__(83);\r\n\tvar router_1 = __webpack_require__(41);\r\n\tvar Login = (function () {\r\n\t    function Login(apiService, authGaurd, router) {\r\n\t        this.apiService = apiService;\r\n\t        this.authGaurd = authGaurd;\r\n\t        this.router = router;\r\n\t        this.hostApi = environment_1.ENV.HOST_API_URL;\r\n\t        this._REASON = 'Session Expired. Please login again.';\r\n\t        this.reason = '';\r\n\t        console.log('Photos component init::AuthGuard', authGaurd);\r\n\t    }\r\n\t    Login.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        console.log((\"production\"), ' ::: ENV VARS::', environment_1.ENV, ':::authGaurd:::', this.authGaurd);\r\n\t        this.authGaurd.doLogout();\r\n\t        this.reason = '';\r\n\t        this.router.params.forEach(function (params) {\r\n\t            if (params['reason']) {\r\n\t                _this.reason = _this._REASON;\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Login.prototype.onLoginClick = function () {\r\n\t        console.log('onLoginClick');\r\n\t        //document.forms[0].submit();\r\n\t        var loginModel = new LoginModel(this.userName, this.password);\r\n\t        this.authGaurd.doLogin(loginModel);\r\n\t    };\r\n\t    return Login;\r\n\t}());\r\n\tLogin = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-login',\r\n\t        template: __webpack_require__(86),\r\n\t        providers: [ApiService_1.ApiService]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [ApiService_1.ApiService,\r\n\t        AuthGuard_1.AuthGuard,\r\n\t        router_1.ActivatedRoute])\r\n\t], Login);\r\n\texports.Login = Login;\r\n\tvar apiUrl = ({\"ENV\":\"production\"}).API_URL;\r\n\tvar LoginModel = (function () {\r\n\t    function LoginModel(userName, password) {\r\n\t        console.log('Login component init');\r\n\t        this.userName = userName;\r\n\t        this.password = password;\r\n\t    }\r\n\t    return LoginModel;\r\n\t}());\r\n\texports.LoginModel = LoginModel;\r\n\n\n/***/ }),\n\n/***/ 82:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar router_1 = __webpack_require__(41);\r\n\tvar ApiService_1 = __webpack_require__(81);\r\n\tvar environment_1 = __webpack_require__(83);\r\n\tvar AuthGuard = (function () {\r\n\t    function AuthGuard(apiService, router) {\r\n\t        this.apiService = apiService;\r\n\t        this.router = router;\r\n\t        this.isLoggedIn = false;\r\n\t        console.log('AuthGuard#-----------------------------#constructor:this.isLoggedIn ,', this.isLoggedIn);\r\n\t        this.apiService = apiService;\r\n\t        console.log('AuthGaurd::', apiService);\r\n\t    }\r\n\t    AuthGuard.prototype.canActivate = function (route, state) {\r\n\t        console.log('AuthGuard#canActivate called for state.url', state.url, ' isLoggedIn:', this.isLoggedIn);\r\n\t        if (state.url === '/login' || state.url === '/' || state.url === '/admin') {\r\n\t            return true;\r\n\t        }\r\n\t        return this.isLoggedIn;\r\n\t    };\r\n\t    AuthGuard.prototype.canActivateChild = function (route, state) {\r\n\t        console.log('AuthGuard#canActivateChild called:this.isLoggedIn ,', this.isLoggedIn);\r\n\t        console.log('AuthGuard#canActivateChild called:this.apiService.isLoggedIn', this.apiService.isLoggedIn);\r\n\t        //return this.permissions.canActivate(this.currentUser, route.params.id);\r\n\t        //return false;\r\n\t        //return this.canActivate(route, state);\r\n\t        if (state.url === '/login' || state.url === '/') {\r\n\t            return true;\r\n\t        }\r\n\t        return this.isLoggedIn;\r\n\t    };\r\n\t    AuthGuard.prototype.doLogin = function (loginModel) {\r\n\t        var _this = this;\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/authorize.php';\r\n\t        this.apiService.post(url, loginModel).subscribe(function (response) {\r\n\t            console.log('checkLoggedInsTate: response');\r\n\t            if (response.success) {\r\n\t                console.log('checkLoggedInsTate: this.isLoggedIn: before', _this.isLoggedIn);\r\n\t                _this.isLoggedIn = true;\r\n\t                console.log('checkLoggedInsTate: this.isLoggedIn: after', _this.isLoggedIn);\r\n\t                _this.router.navigate(['/events']);\r\n\t            }\r\n\t            else {\r\n\t                _this.isLoggedIn = false;\r\n\t            }\r\n\t        }, function (err) {\r\n\t            console.log('err response:', err);\r\n\t            _this.isLoggedIn = false;\r\n\t        });\r\n\t    };\r\n\t    AuthGuard.prototype.doLogout = function () {\r\n\t        this.isLoggedIn = false;\r\n\t    };\r\n\t    return AuthGuard;\r\n\t}());\r\n\tAuthGuard = __decorate([\r\n\t    core_1.Injectable(),\r\n\t    __metadata(\"design:paramtypes\", [ApiService_1.ApiService, router_1.Router])\r\n\t], AuthGuard);\r\n\texports.AuthGuard = AuthGuard;\r\n\n\n/***/ }),\n\n/***/ 86:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <h3>Login</h3>\\r\\n        <p class=\\\"bg-danger\\\">{{reason}}</p>\\r\\n        <form class=\\\"col-sm-12 form-horizontal\\\" action=\\\"{{hostApi}}/authorize.php\\\" method=\\\"post\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\">User name</label>\\r\\n                    <div class=\\\"col-sm-5\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" [(ngModel)]=\\\"userName\\\" name=\\\"userName\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\">Password</label>\\r\\n                    <div class=\\\"col-sm-5\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-2\\\"></div>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Login\\\" (click)=\\\"onLoginClick()\\\">\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";\n\n/***/ }),\n\n/***/ 87:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t/**\r\n\t * Created by balank on 8/09/2017.\r\n\t */\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar http_1 = __webpack_require__(63);\r\n\tvar ApiService_1 = __webpack_require__(81);\r\n\tvar EventsCollection_1 = __webpack_require__(88);\r\n\tvar PagingData_1 = __webpack_require__(210);\r\n\tvar moment = __webpack_require__(89);\r\n\tvar rxjs_1 = __webpack_require__(211);\r\n\tvar environment_1 = __webpack_require__(83);\r\n\tvar Events = (function () {\r\n\t    function Events(apiService) {\r\n\t        this.apiService = apiService;\r\n\t        //VimonishaExhibitions?fields=events.since(1486984200).until(1504960500).limit(100);\r\n\t        this.message = '';\r\n\t        this.eventsCollection = new EventsCollection_1.EventsCollection();\r\n\t        this.fbCollection = new EventsCollection_1.EventsCollection();\r\n\t        this.fromDate = 'NONE';\r\n\t        this.toDate = moment().format(environment_1.ENV.DATE_TIME_FORMAT);\r\n\t        this.accessToken = '';\r\n\t        this.dialogSubject = new rxjs_1.Subject();\r\n\t        console.log('Events component init');\r\n\t        this.getEventsFromTable();\r\n\t    }\r\n\t    Events.prototype.setEvents = function (collectionModel, eventsArray) {\r\n\t        console.log('setEvents:::-------------------------------------------------------------------------------------');\r\n\t        var events = eventsArray.map(function (model) {\r\n\t            model.endTime = model.end_time || model.endTime;\r\n\t            model.startTime = model.start_time || model.startTime;\r\n\t            delete model.end_time;\r\n\t            delete model.start_time;\r\n\t            var eventModel = new EventsCollection_1.EventModel(model);\r\n\t            console.log(collectionModel.events.length, ':setEvents:::-----------------------------------------------------NEW eventModel->', eventModel);\r\n\t            collectionModel.events.push(eventModel);\r\n\t            return eventModel;\r\n\t        });\r\n\t        return events.length > 0 ? true : false;\r\n\t    };\r\n\t    Events.prototype.onGetEventClick = function () {\r\n\t        var _this = this;\r\n\t        var events = new Array();\r\n\t        this.eventParams = new EventsCollection_1.EventParams();\r\n\t        this.getEvents(this.eventParams, events).subscribe(function (response) {\r\n\t            console.log('getEvents success::::::::::::::::::::::::::::::::::::::::::::::::::::', response);\r\n\t            _this.setEvents(_this.fbCollection, response.data);\r\n\t        }, function (err) { console.log('getEvents err:::', err); }, function () { console.log('getEvents final:::'); });\r\n\t    };\r\n\t    Events.prototype.getEvents = function (eventParams, collection) {\r\n\t        var _this = this;\r\n\t        console.log('getEvents....called with eventParams:', eventParams);\r\n\t        this.message = 'In progress...';\r\n\t        if (!this.isValidDateRange(this.fromDate, this.toDate)) {\r\n\t            console.log('Invalid Date range!!!!');\r\n\t            this.message = 'Invalid Date range......';\r\n\t            return;\r\n\t        }\r\n\t        console.log('is valid date range', this.fromDate + ' : to : ' + this.toDate);\r\n\t        var since = moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).unix();\r\n\t        var until = moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT).unix();\r\n\t        var url = environment_1.ENV.FB_GRAPH_URL + environment_1.ENV.FB_PROFILE_ID + '/events';\r\n\t        var params = new http_1.URLSearchParams(); //TODO: IE fix, polyfill\r\n\t        params.append('access_token', this.accessToken);\r\n\t        params.append('since', since.toString());\r\n\t        params.append('until', until.toString());\r\n\t        params.append('fields', eventParams.fields);\r\n\t        params.append('limit', eventParams.limit);\r\n\t        params.append('pretty', eventParams.pretty);\r\n\t        if (eventParams.after !== '') {\r\n\t            console.log('after is present...ADDING after');\r\n\t            params.append('after', eventParams.after);\r\n\t        }\r\n\t        url = url + '?' + params.toString();\r\n\t        console.log('url->', url);\r\n\t        this.apiService.fetch(url).subscribe(function (response) {\r\n\t            console.log('getEvents RESPONSE ->', response);\r\n\t            if (response.data && response.data.length > 0) {\r\n\t                var pagingData = new PagingData_1.PagingData(response.paging);\r\n\t                //let isSet:Boolean = this.setEvents(this.fbCollection, response.data);\r\n\t                response.data.filter(function (dataModel) { collection.push(dataModel); });\r\n\t                if (pagingData.cursors.after !== '') {\r\n\t                    console.log('pagingData.cursor.after PRESENT');\r\n\t                    _this.eventParams.after = pagingData.cursors.after;\r\n\t                    return _this.getEvents(_this.eventParams, collection);\r\n\t                }\r\n\t                else {\r\n\t                    _this.eventParams.after = '';\r\n\t                    console.log('---------------------------------------------------- NOT PRESENT--------ALL DONE!!');\r\n\t                    _this.dialogSubject.next({ data: collection });\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                _this.message = 'Complete!';\r\n\t                console.log('-------------------------------------------ALL DONE!!');\r\n\t                _this.dialogSubject.next({ data: collection });\r\n\t            }\r\n\t        }, function (err) {\r\n\t            _this.message = JSON.stringify(err);\r\n\t        });\r\n\t        return this.dialogSubject;\r\n\t    };\r\n\t    Events.prototype.onSubmitEvents1 = function () {\r\n\t        console.log('SUBMIT onSubmitEvents1...', this.fbCollection);\r\n\t        this.submitEvents(this.fbCollection);\r\n\t    };\r\n\t    Events.prototype.submitEvents = function (collection) {\r\n\t        var _this = this;\r\n\t        console.log('SUBMIT eventsCollection...', collection);\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/events_post.php';\r\n\t        this.apiService.post(url, collection).subscribe(function (response) {\r\n\t            console.log('eventModel POST response recieved....', response);\r\n\t            if (response && response.success) {\r\n\t                _this.fbCollection = new EventsCollection_1.EventsCollection();\r\n\t                _this.getEventsFromTable();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Events.prototype.addEventModel = function (eventModel) {\r\n\t        var eventsCollection = new EventsCollection_1.EventsCollection();\r\n\t        eventsCollection.events.push(eventModel);\r\n\t        console.log('SUBMIT addEventModel...', eventsCollection);\r\n\t        this.submitEvents(eventsCollection);\r\n\t    };\r\n\t    Events.prototype.onDeleteEvent = function (eventModel) {\r\n\t        var _this = this;\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/events_delete.php';\r\n\t        console.log('DELETE eventModel...', eventModel);\r\n\t        this.apiService.post(url, eventModel).subscribe(function (response) {\r\n\t            console.log('eventModel DELETE:POST response recieved....', response);\r\n\t            if (response && response.success) {\r\n\t                console.log('Deleted successfully....');\r\n\t            }\r\n\t            else {\r\n\t                console.log('Delete UNSUCCESSFUL');\r\n\t            }\r\n\t            _this.getEventsFromTable();\r\n\t        });\r\n\t    };\r\n\t    Events.prototype.onUpdateEvent = function (eventModel) {\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/events_update.php';\r\n\t        console.log('UPDATE eventModel...', eventModel);\r\n\t        /*this.apiService.post(url, eventModel).subscribe((response:any) => {\r\n\t            console.log('eventModel UPDATE:POST response recieved....', response);\r\n\t        });*/\r\n\t    };\r\n\t    Events.prototype.getEventsFromTable = function () {\r\n\t        var _this = this;\r\n\t        console.log('getEventsFromTable...');\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/events_get.php';\r\n\t        this.eventsCollection.events = new Array();\r\n\t        return this.apiService.fetch(url).subscribe(function (response) {\r\n\t            console.log('getEventsFromTable response ->', response);\r\n\t            var isSet = _this.setEvents(_this.eventsCollection, response.events);\r\n\t            _this.setLastEndTime();\r\n\t        }, function (err) {\r\n\t            console.log('getEventsFromTable ERR ->', err);\r\n\t            _this.message = JSON.stringify(err);\r\n\t        });\r\n\t    };\r\n\t    Events.prototype.setLastEndTime = function () {\r\n\t        var total = this.eventsCollection.events.length;\r\n\t        console.log('setLastEndTime', total);\r\n\t        if (total > 0) {\r\n\t            var lastModel = this.eventsCollection.events[0];\r\n\t            this.fromDate = lastModel.endTime;\r\n\t        }\r\n\t    };\r\n\t    Events.prototype.isValidDateRange = function (fromDate, toDate) {\r\n\t        if (moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).isValid() && moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT).isValid()\r\n\t            && (moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).isBefore(moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT)))) {\r\n\t            console.log('IS VALID DATE RANGE:', this.fromDate + ' : to : ' + this.toDate);\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    return Events;\r\n\t}());\r\n\tEvents = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-events',\r\n\t        template: __webpack_require__(498),\r\n\t        providers: [ApiService_1.ApiService]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [ApiService_1.ApiService])\r\n\t], Events);\r\n\texports.Events = Events;\r\n\n\n/***/ }),\n\n/***/ 210:\n/***/ (function(module, exports) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar Cursors = (function () {\r\n\t    function Cursors(before, after) {\r\n\t        this.before = before || '';\r\n\t        this.after = after || '';\r\n\t    }\r\n\t    return Cursors;\r\n\t}());\r\n\texports.Cursors = Cursors;\r\n\tvar PagingData = (function () {\r\n\t    function PagingData(pagingData) {\r\n\t        this.next = pagingData.next || 'none';\r\n\t        this.previous = pagingData.previous || 'none';\r\n\t        if (pagingData.cursors) {\r\n\t            this.cursors = pagingData.cursors;\r\n\t        }\r\n\t        else {\r\n\t            this.cursors = new Cursors('', '');\r\n\t        }\r\n\t    }\r\n\t    return PagingData;\r\n\t}());\r\n\texports.PagingData = PagingData;\r\n\n\n/***/ }),\n\n/***/ 498:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">Access token</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accessToken\\\" [(ngModel)]=\\\"accessToken\\\" name=\\\"accessToken\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">From</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" name=\\\"fromDate\\\">\\r\\n                </div>\\r\\n                <label class=\\\"col-sm-1 control-label\\\">To</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-success\\\" value=\\\"Get Events from Facebook\\\" (click)=\\\"onGetEventClick()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add Events to DB\\\" (click)=\\\"onSubmitEvents1()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Get Events from DB\\\" (click)=\\\"getEventsFromTable()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <h2 class=\\\"text-danger\\\">{{message}}</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Facebook</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"col-sm-2\\\">Start Time <br/> End Time</th>\\r\\n                <th>Name</th>\\r\\n                <th class=\\\"col-sm-2\\\">URL : {{fbCollection.events.length}}</th>\\r\\n                <th class=\\\"col-sm-2\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n            <tr *ngFor=\\\"let eventModel of fbCollection.events;\\\">\\r\\n                <td>{{eventModel.startTime}} <br/> {{eventModel.endTime}}</td>\\r\\n                <td>{{eventModel.name}}</td>\\r\\n                <td><img class=\\\"img img-responsive\\\" src=\\\"{{eventModel.cover.source}}\\\"></td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add\\\" (click)=\\\"addEventModel(eventModel)\\\">\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Table</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"col-sm-2\\\">Start Time <br/> End Time</th>\\r\\n                <th>Name</th>\\r\\n                <th class=\\\"col-sm-2\\\">URL : {{eventsCollection.events.length}}</th>\\r\\n                <th class=\\\"col-sm-2\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n            <tr *ngFor=\\\"let eventModel of eventsCollection.events;\\\">\\r\\n                <td>{{eventModel.startTime}} <br/> {{eventModel.endTime}}</td>\\r\\n                <td>\\r\\n                    <h4>{{eventModel.name}}</h4>\\r\\n                    <h4>{{eventModel.name}}</h4>\\r\\n                </td>\\r\\n                <td><img class=\\\"img img-responsive\\\" src=\\\"{{eventModel.cover.source}}\\\"></td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Update\\\" (click)=\\\"onUpdateEvent(eventModel)\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Delete\\\" (click)=\\\"onDeleteEvent(eventModel)\\\">\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n</section>\\r\\n\";\n\n/***/ }),\n\n/***/ 499:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t/**\r\n\t * Created by balank on 8/09/2017.\r\n\t */\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar ApiService_1 = __webpack_require__(81);\r\n\tvar PhotoCollection_1 = __webpack_require__(500);\r\n\tvar Albums = (function () {\r\n\t    function Albums(apiService) {\r\n\t        this.apiService = apiService;\r\n\t        this.albumCollection = new PhotoCollection_1.AlbumCollection();\r\n\t        console.log('Albums component init');\r\n\t    }\r\n\t    return Albums;\r\n\t}());\r\n\tAlbums = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-albums',\r\n\t        template: __webpack_require__(501),\r\n\t        providers: [ApiService_1.ApiService]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [ApiService_1.ApiService])\r\n\t], Albums);\r\n\texports.Albums = Albums;\r\n\n\n/***/ }),\n\n/***/ 501:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <h3>Albums</h3>\\r\\n\\r\\n        Total: {{albumCollection.albums.length}}\\r\\n        <ul class=\\\"list-inline album-container\\\">\\r\\n            <li *ngFor=\\\"let albumModel of albumCollection.albums;\\\">\\r\\n                <!-- href=\\\"admin/photos/{{albumModel.id}}\\\" -->\\r\\n                <a [routerLink]=\\\"['/photos', albumModel.id]\\\" >\\r\\n                    <h4>{{albumModel.name}}</h4>\\r\\n                    <div class=\\\"name\\\">#{{albumModel.id}}</div>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n    </div>\\r\\n</section>\";\n\n/***/ }),\n\n/***/ 502:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t/**\r\n\t * Created by balank on 8/09/2017.\r\n\t */\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar http_1 = __webpack_require__(63);\r\n\tvar ApiService_1 = __webpack_require__(81);\r\n\tvar PostCollection_1 = __webpack_require__(503);\r\n\tvar PagingData_1 = __webpack_require__(210);\r\n\tvar moment = __webpack_require__(89);\r\n\tvar rxjs_1 = __webpack_require__(211);\r\n\tvar environment_1 = __webpack_require__(83);\r\n\tvar Posts = (function () {\r\n\t    function Posts(apiService) {\r\n\t        this.apiService = apiService;\r\n\t        //VimonishaExhibitions/posts?fields=events.since(1486984200).until(1504960500).limit(100);\r\n\t        this.message = '';\r\n\t        this.postCollection = new PostCollection_1.PostCollection();\r\n\t        this.fbCollection = new PostCollection_1.PostCollection();\r\n\t        this.fromDate = 'NONE';\r\n\t        this.toDate = moment().format(environment_1.ENV.DATE_TIME_FORMAT);\r\n\t        this.accessToken = '';\r\n\t        this.dialogSubject = new rxjs_1.Subject();\r\n\t        console.log('Post component init');\r\n\t        this.getPostsFromTable();\r\n\t    }\r\n\t    Posts.prototype.setPosts = function (collectionModel, postsArray) {\r\n\t        console.log('setPosts::-------------------------------------------------------------------------------------');\r\n\t        debugger;\r\n\t        var posts = postsArray.map(function (model) {\r\n\t            model.createdTime = model.created_time || model.createdTime;\r\n\t            delete model.created_time;\r\n\t            var postModel = new PostCollection_1.PostModel(model);\r\n\t            console.log(collectionModel.posts.length, ':setPosts:::-----------------------------------------------------NEW postModel->', postModel);\r\n\t            collectionModel.posts.push(postModel);\r\n\t            return postModel;\r\n\t        });\r\n\t        return posts.length > 0 ? true : false;\r\n\t    };\r\n\t    Posts.prototype.onGetPostsClick = function () {\r\n\t        var _this = this;\r\n\t        var posts = new Array();\r\n\t        this.postParams = new PostCollection_1.PostParams();\r\n\t        this.getPosts(this.postParams, posts).subscribe(function (response) {\r\n\t            console.log('posts success::::::::::::::::::::::::::::::::::::::::::::::::::::', response);\r\n\t            _this.setPosts(_this.fbCollection, response.data);\r\n\t        }, function (err) { console.log('posts err:::', err); }, function () { console.log('posts final:::'); });\r\n\t    };\r\n\t    Posts.prototype.getPosts = function (postParams, collection) {\r\n\t        var _this = this;\r\n\t        console.log('getEvents....called with postParams:', postParams);\r\n\t        this.message = 'In progress...';\r\n\t        if (!this.isValidDateRange(this.fromDate, this.toDate)) {\r\n\t            console.log('Invalid Date range!!!!');\r\n\t            this.message = 'Invalid Date range......';\r\n\t            return;\r\n\t        }\r\n\t        console.log('is valid date range', this.fromDate + ' : to : ' + this.toDate);\r\n\t        var since = moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).unix();\r\n\t        var until = moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT).unix();\r\n\t        var url = environment_1.ENV.FB_GRAPH_URL + environment_1.ENV.FB_PROFILE_ID + '/posts';\r\n\t        var params = new http_1.URLSearchParams(); //TODO: IE fix, polyfill\r\n\t        params.append('access_token', this.accessToken);\r\n\t        params.append('since', since.toString());\r\n\t        params.append('until', until.toString());\r\n\t        params.append('fields', postParams.fields);\r\n\t        params.append('limit', postParams.limit);\r\n\t        params.append('pretty', postParams.pretty);\r\n\t        if (postParams.after !== '') {\r\n\t            console.log('after is present...ADDING after');\r\n\t            params.append('after', postParams.after);\r\n\t        }\r\n\t        url = url + '?' + params.toString();\r\n\t        console.log('url->', url);\r\n\t        this.apiService.fetch(url).subscribe(function (response) {\r\n\t            console.log('getEvents RESPONSE ->', response);\r\n\t            if (response.data && response.data.length > 0) {\r\n\t                var pagingData = new PagingData_1.PagingData(response.paging);\r\n\t                //let isSet:Boolean = this.setEvents(this.fbCollection, response.data);\r\n\t                response.data.filter(function (dataModel) { collection.push(dataModel); });\r\n\t                if (pagingData.cursors.after !== '') {\r\n\t                    console.log('pagingData.cursor.after PRESENT');\r\n\t                    _this.postParams.after = pagingData.cursors.after;\r\n\t                    return _this.getPosts(_this.postParams, collection);\r\n\t                }\r\n\t                else {\r\n\t                    _this.postParams.after = '';\r\n\t                    console.log('---------------------------------------------------- NOT PRESENT--------ALL DONE!!');\r\n\t                    _this.dialogSubject.next({ data: collection });\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                _this.message = 'Complete!';\r\n\t                console.log('-------------------------------------------ALL DONE!!');\r\n\t                _this.dialogSubject.next({ data: collection });\r\n\t            }\r\n\t        }, function (err) {\r\n\t            _this.message = JSON.stringify(err);\r\n\t        });\r\n\t        return this.dialogSubject;\r\n\t    };\r\n\t    Posts.prototype.onSubmitPosts = function () {\r\n\t        console.log('SUBMIT onSubmitEvents1...', this.fbCollection);\r\n\t        this.submitPosts(this.fbCollection);\r\n\t    };\r\n\t    Posts.prototype.submitPosts = function (collection) {\r\n\t        var _this = this;\r\n\t        console.log('SUBMIT postCollection...', collection);\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/posts_post.php';\r\n\t        this.apiService.post(url, collection).subscribe(function (response) {\r\n\t            console.log('postModel POST response recieved....', response);\r\n\t            if (response && response.success) {\r\n\t                _this.fbCollection = new PostCollection_1.PostCollection();\r\n\t                _this.getPostsFromTable();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Posts.prototype.addPostModel = function (postModel) {\r\n\t        var postCollection = new PostCollection_1.PostCollection();\r\n\t        postCollection.posts.push(postModel);\r\n\t        console.log('SUBMIT addEventModel...', postCollection);\r\n\t        this.submitPosts(postCollection);\r\n\t    };\r\n\t    Posts.prototype.onDeletePosts = function (postModel) {\r\n\t        var _this = this;\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/posts_delete.php';\r\n\t        console.log('DELETE postModel...', postModel);\r\n\t        this.apiService.post(url, postModel).subscribe(function (response) {\r\n\t            console.log('postModel DELETE:POST response recieved....', response);\r\n\t            if (response && response.success) {\r\n\t                console.log('Deleted successfully....');\r\n\t            }\r\n\t            else {\r\n\t                console.log('Delete UNSUCCESSFUL');\r\n\t            }\r\n\t            _this.getPostsFromTable();\r\n\t        });\r\n\t    };\r\n\t    Posts.prototype.onUpdatePosts = function (postModel) {\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/posts_update.php';\r\n\t        console.log('UPDATE postModel...', postModel);\r\n\t        /*this.apiService.post(url, postModel).subscribe((response:any) => {\r\n\t            console.log('postModel UPDATE:POST response recieved....', response);\r\n\t        });*/\r\n\t    };\r\n\t    Posts.prototype.getPostsFromTable = function () {\r\n\t        var _this = this;\r\n\t        console.log('getPostsFromTable...');\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/posts_get.php';\r\n\t        this.postCollection.posts = new Array();\r\n\t        return this.apiService.fetch(url).subscribe(function (response) {\r\n\t            console.log('getPostsFromTable response ->', response);\r\n\t            var isSet = _this.setPosts(_this.postCollection, response.posts);\r\n\t            _this.setLastEndTime();\r\n\t        }, function (err) {\r\n\t            console.log('getPostsFromTable ERR ->', err);\r\n\t            _this.message = JSON.stringify(err);\r\n\t        });\r\n\t    };\r\n\t    Posts.prototype.setLastEndTime = function () {\r\n\t        var total = this.postCollection.posts.length;\r\n\t        console.log('setLastEndTime', total);\r\n\t        if (total > 0) {\r\n\t            var lastModel = this.postCollection.posts[0];\r\n\t            this.fromDate = lastModel.createdTime;\r\n\t        }\r\n\t    };\r\n\t    Posts.prototype.isValidDateRange = function (fromDate, toDate) {\r\n\t        if (moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).isValid() && moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT).isValid()\r\n\t            && (moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).isBefore(moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT)))) {\r\n\t            console.log('IS VALID DATE RANGE:', this.fromDate + ' : to : ' + this.toDate);\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    return Posts;\r\n\t}());\r\n\tPosts = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-posts',\r\n\t        template: __webpack_require__(504),\r\n\t        providers: [ApiService_1.ApiService]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [ApiService_1.ApiService])\r\n\t], Posts);\r\n\texports.Posts = Posts;\r\n\n\n/***/ }),\n\n/***/ 503:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar moment = __webpack_require__(89);\r\n\tvar environment_1 = __webpack_require__(83);\r\n\tvar PostParams = (function () {\r\n\t    function PostParams() {\r\n\t        this.fields = 'id,full_picture,description,name,created_time';\r\n\t        this.limit = '10';\r\n\t        this.pretty = '0';\r\n\t        this.before = '';\r\n\t        this.after = '';\r\n\t    }\r\n\t    return PostParams;\r\n\t}());\r\n\texports.PostParams = PostParams;\r\n\tvar PostModel = (function () {\r\n\t    function PostModel(postModel) {\r\n\t        this.name = postModel.name; //TODO: check for untitled string.\r\n\t        this.id = postModel.id;\r\n\t        this.uid = postModel.uid;\r\n\t        this.description = postModel.description || '';\r\n\t        this.fullPicture = postModel.full_picture || '';\r\n\t        this.createdTime = moment(postModel.createdTime || '').format(environment_1.ENV.DATE_TIME_FORMAT);\r\n\t    }\r\n\t    return PostModel;\r\n\t}());\r\n\texports.PostModel = PostModel;\r\n\tvar PostCollection = (function () {\r\n\t    function PostCollection() {\r\n\t        this.posts = new Array();\r\n\t    }\r\n\t    return PostCollection;\r\n\t}());\r\n\texports.PostCollection = PostCollection;\r\n\n\n/***/ }),\n\n/***/ 504:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"container\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n        <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">Access token</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accessToken\\\" [(ngModel)]=\\\"accessToken\\\" name=\\\"accessToken\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">From</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" name=\\\"fromDate\\\">\\r\\n                </div>\\r\\n                <label class=\\\"col-sm-1 control-label\\\">To</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-success\\\" value=\\\"Get Posts from Facebook\\\" (click)=\\\"onGetPostsClick()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add Posts to DB\\\" (click)=\\\"onSubmitPosts()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Get Posts from DB\\\" (click)=\\\"getPostsFromTable()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\t<div class=\\\"row\\\">\\r\\n        <h2 class=\\\"text-danger\\\">{{message}}</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Facebook</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"col-sm-2\\\">Created Time </th>\\r\\n                <th>Name</th>\\r\\n                <th class=\\\"col-sm-2\\\">URL : {{fbCollection.posts.length}}</th>\\r\\n                <th class=\\\"col-sm-2\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n            <tr *ngFor=\\\"let postModel of fbCollection.posts;\\\">\\r\\n                <td>{{postModel.createdTime}}</td>\\r\\n                <td>\\r\\n                    {{postModel.name}}\\r\\n                    <div>\\r\\n                    {{postModel.description}}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><img class=\\\"img img-responsive\\\" src=\\\"{{postModel.fullPicture}}\\\"></td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add\\\" (click)=\\\"addPostModel(postModel)\\\">\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"col-sm-1\\\">#Id</th>\\r\\n                    <th>Desc</th>\\r\\n                    <th class=\\\"col-sm-2\\\">Time</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n                <tr *ngFor=\\\"let postModel of postCollection.posts; let myIndex = index\\\">\\r\\n                    <td>\\r\\n                        <img class=\\\"img img-responsive\\\" src=\\\"{{postModel.fullPicture}}\\\">\\r\\n                    </td>\\r\\n                    <td>{{postModel.name}}</td>\\r\\n                    <td>{{postModel.createdTime}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\r\\n</section>\\r\\n\";\n\n/***/ }),\n\n/***/ 505:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\t/**\r\n\t * Created by balank on 8/09/2017.\r\n\t */\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar router_1 = __webpack_require__(41);\r\n\tvar http_1 = __webpack_require__(63);\r\n\tvar ApiService_1 = __webpack_require__(81);\r\n\tvar PhotoCollection_1 = __webpack_require__(500);\r\n\tvar PagingData_1 = __webpack_require__(210);\r\n\tvar moment = __webpack_require__(89);\r\n\tvar rxjs_1 = __webpack_require__(211);\r\n\tvar environment_1 = __webpack_require__(83);\r\n\tvar Photos = (function () {\r\n\t    function Photos(apiService, router) {\r\n\t        this.apiService = apiService;\r\n\t        this.router = router;\r\n\t        //VimonishaExhibitions?fields=events.since(1486984200).until(1504960500).limit(100);\r\n\t        //VimonishaExhibitions?fields=albums.id(178838325568799){photos}\r\n\t        //178838325568799?fields=photos{id, source,name}\r\n\t        this.message = '';\r\n\t        this.albumName = 'NOT KNOWN';\r\n\t        this.albumsCollection = new PhotoCollection_1.AlbumCollection();\r\n\t        this.fromDate = 'NONE';\r\n\t        this.accessToken = '';\r\n\t        this.toDate = moment().format(environment_1.ENV.DATE_TIME_FORMAT);\r\n\t        this.dialogSubject = new rxjs_1.Subject();\r\n\t        this.imageHostPath = environment_1.ENV.HOST_API_URL;\r\n\t        console.log('Photos component init');\r\n\t    }\r\n\t    Photos.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        console.log('ngOnInit::');\r\n\t        var albumId = '';\r\n\t        this.router.params.forEach(function (params) {\r\n\t            console.log('ngOnInit::', params['albumId']);\r\n\t            _this.albumId = params['albumId'];\r\n\t        });\r\n\t        this.albumsCollection.albums.forEach(function (album) {\r\n\t            if (album.id === _this.albumId) {\r\n\t                _this.albumName = album.name;\r\n\t            }\r\n\t        });\r\n\t        this.photoCollection = new PhotoCollection_1.PhotoCollection(this.albumId);\r\n\t        this.fbCollection = new PhotoCollection_1.PhotoCollection(this.albumId);\r\n\t        this.getPhotosFromTable(this.albumId);\r\n\t    };\r\n\t    Photos.prototype.setPhotos = function (photosArr, dataArray) {\r\n\t        console.log('setPhotos:::-------------------------------------------------------------------------------------');\r\n\t        var photos = dataArray.map(function (model) {\r\n\t            if (model.created_time) {\r\n\t                model.createdTime = model.created_time;\r\n\t                delete model.created_time;\r\n\t            }\r\n\t            var photoModel = new PhotoCollection_1.PhotoModel(model);\r\n\t            console.log(photosArr.length, ':setPhotos:::------------------NEW photoModel->', photoModel);\r\n\t            photosArr.push(photoModel);\r\n\t            return photoModel;\r\n\t        });\r\n\t        return photos.length > 0 ? true : false;\r\n\t    };\r\n\t    Photos.prototype.onGetPhotosClick = function () {\r\n\t        var _this = this;\r\n\t        this.fbCollection = new PhotoCollection_1.PhotoCollection(this.albumId);\r\n\t        var photos = new Array();\r\n\t        this.photoParams = new PhotoCollection_1.PhotoParams(this.albumId);\r\n\t        this.dialogSubject = new rxjs_1.Subject();\r\n\t        console.log('onGetPhotosClick:::::::', photos);\r\n\t        this.getPhotos(this.photoParams, photos, false).subscribe(function (response) {\r\n\t            console.log('getPhotos success::::::::::::::::::::::::::::::::::::::::::::::::::::', response);\r\n\t            _this.setPhotos(_this.fbCollection.photos, response.data);\r\n\t        }, function (err) { console.log('getPhotos err:::', err); }, function () { console.log('getPhotos final:::'); });\r\n\t    };\r\n\t    Photos.prototype.getPhotosFromTable = function (albumId) {\r\n\t        var _this = this;\r\n\t        console.log('getEventsFromTable...');\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/photos_get.php?albumId=' + albumId;\r\n\t        this.photoCollection.photos = new Array();\r\n\t        return this.apiService.fetch(url).subscribe(function (response) {\r\n\t            console.log('getPhotosFromTable response ->', response);\r\n\t            _this.setPhotos(_this.photoCollection.photos, response.photos);\r\n\t            _this.setLastEndTime();\r\n\t        }, function (err) {\r\n\t            console.log('getPhotosFromTable ERR ->', err);\r\n\t            _this.message = JSON.stringify(err);\r\n\t        });\r\n\t    };\r\n\t    Photos.prototype.onDeletePhotoModel = function (photoModel) {\r\n\t        var _this = this;\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/photos_delete.php';\r\n\t        console.log('onDeletePhotoModel POST ->', photoModel);\r\n\t        this.apiService.post(url, photoModel).subscribe(function (response) {\r\n\t            console.log('onDeletePhotoModel response ->', response);\r\n\t            _this.getPhotosFromTable(_this.photoCollection.albumId);\r\n\t        }, function (err) {\r\n\t            console.log('onDeletePhotoModel ERR ->', err);\r\n\t            _this.message = JSON.stringify(err);\r\n\t        });\r\n\t    };\r\n\t    Photos.prototype.onAddPhotoModel = function (photoModel) {\r\n\t        var indexId = this.fbCollection.photos.indexOf(photoModel);\r\n\t        this.fbCollection.photos.splice(indexId, 1);\r\n\t        var collection = this.fbCollection;\r\n\t        collection.photos = [photoModel];\r\n\t        this.submitPhotos(collection);\r\n\t    };\r\n\t    Photos.prototype.onSubmitPhotos = function () {\r\n\t        console.log('onSubmitPhotos');\r\n\t        this.submitPhotos(this.fbCollection);\r\n\t    };\r\n\t    Photos.prototype.submitPhotos = function (collection) {\r\n\t        var _this = this;\r\n\t        console.log('SUBMIT PhotoCollection...', collection);\r\n\t        var url = environment_1.ENV.HOST_API_URL + '/photos_post.php';\r\n\t        this.apiService.post(url, collection).subscribe(function (response) {\r\n\t            console.log('eventModel POST response recieved....', response);\r\n\t            if (response && response.success) {\r\n\t                _this.getPhotosFromTable(_this.albumId);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Photos.prototype.getPhotos = function (photoParams, collection, isRepeat) {\r\n\t        var _this = this;\r\n\t        console.log('getPhotos....called with photoParams:', photoParams, 'COLLETION:::', collection);\r\n\t        this.message = 'In progress...';\r\n\t        if (!this.isValidDateRange(this.fromDate, this.toDate)) {\r\n\t            console.log('Invalid Date range!!!!');\r\n\t            this.message = 'Invalid Date range......';\r\n\t            return;\r\n\t        }\r\n\t        console.log('is valid date range', this.fromDate + ' : to : ' + this.toDate);\r\n\t        var since = moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).unix();\r\n\t        var until = moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT).unix();\r\n\t        console.log('is valid date range', since + ' : to : ' + until);\r\n\t        var url = environment_1.ENV.FB_GRAPH_URL + photoParams.albumId + '/photos';\r\n\t        var params = new http_1.URLSearchParams(); //TODO: IE fix, polyfill\r\n\t        params.append('access_token', this.accessToken);\r\n\t        params.append('since', since.toString());\r\n\t        params.append('until', until.toString());\r\n\t        params.append('fields', photoParams.fields);\r\n\t        params.append('limit', photoParams.limit);\r\n\t        params.append('pretty', photoParams.pretty);\r\n\t        if (photoParams.after !== '' && photoParams.nextUrl !== '') {\r\n\t            console.log('after is present...ADDING after');\r\n\t            params.append('after', photoParams.after);\r\n\t        }\r\n\t        url = url + '?' + params.toString();\r\n\t        console.log('url->', url);\r\n\t        this.apiService.fetch(url).subscribe(function (response) {\r\n\t            console.log('getEvents RESPONSE ->', response);\r\n\t            var photos = response;\r\n\t            if (photos && photos.data.length > 0) {\r\n\t                var data = photos.data;\r\n\t                var pagingData = new PagingData_1.PagingData(photos.paging);\r\n\t                data.filter(function (dataModel) { collection.push(dataModel); });\r\n\t                if (pagingData.next !== 'none') {\r\n\t                    console.log(collection.length, ':::pagingData.NEXT PRESENT');\r\n\t                    _this.photoParams.after = pagingData.cursors.after;\r\n\t                    _this.photoParams.nextUrl = pagingData.next;\r\n\t                    return _this.getPhotos(_this.photoParams, collection, true);\r\n\t                }\r\n\t                else {\r\n\t                    _this.photoParams.after = '';\r\n\t                    _this.photoParams.nextUrl = '';\r\n\t                    console.log('---------------------------------------------------- pagingData complete--------ALL DONE!!', collection);\r\n\t                    _this.dialogSubject.next({ data: collection });\r\n\t                }\r\n\t            }\r\n\t            else {\r\n\t                _this.message = 'Complete!';\r\n\t                console.log('-------------------------------------------ALL DONE!!', collection);\r\n\t                _this.dialogSubject.next({ data: collection });\r\n\t            }\r\n\t        }, function (err) {\r\n\t            _this.message = JSON.stringify(err);\r\n\t        });\r\n\t        return this.dialogSubject;\r\n\t    };\r\n\t    Photos.prototype.setLastEndTime = function () {\r\n\t        var total = this.photoCollection.photos.length;\r\n\t        console.log('setLastEndTime', total);\r\n\t        if (total > 0) {\r\n\t            var lastModel = this.photoCollection.photos[0];\r\n\t            this.fromDate = lastModel.createdTime;\r\n\t        }\r\n\t    };\r\n\t    Photos.prototype.isValidDateRange = function (fromDate, toDate) {\r\n\t        if (moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).isValid() && moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT).isValid()\r\n\t            && (moment(this.fromDate, environment_1.ENV.DATE_TIME_FORMAT).isBefore(moment(this.toDate, environment_1.ENV.DATE_TIME_FORMAT)))) {\r\n\t            console.log('IS VALID DATE RANGE:', this.fromDate + ' : to : ' + this.toDate);\r\n\t            return true;\r\n\t        }\r\n\t        return false;\r\n\t    };\r\n\t    return Photos;\r\n\t}());\r\n\tPhotos = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'app-photos',\r\n\t        template: __webpack_require__(506),\r\n\t        providers: [ApiService_1.ApiService]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [ApiService_1.ApiService, router_1.ActivatedRoute])\r\n\t], Photos);\r\n\texports.Photos = Photos;\r\n\n\n/***/ }),\n\n/***/ 506:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <form class=\\\"form-horizontal\\\">\\r\\n        <h3>{{albumName}}</h3>\\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">Access token</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accessToken\\\" [(ngModel)]=\\\"accessToken\\\" name=\\\"accessToken\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">From</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" name=\\\"fromDate\\\">\\r\\n                </div>\\r\\n                <label class=\\\"col-sm-1 control-label\\\">To</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-success\\\" value=\\\"Get Photos from Facebook\\\" (click)=\\\"onGetPhotosClick()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add ALL Photos to DB\\\" (click)=\\\"onSubmitPhotos()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Get Photos from DB\\\" (click)=\\\"getPhotosFromTable('178838325568799')\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <h2 class=\\\"text-danger\\\">{{message}}</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Facebook</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"fbCollection.photos\\\">\\r\\n        Total: {{fbCollection.photos.length}}\\r\\n        <ul class=\\\"list-inline photo-container\\\">\\r\\n            <li *ngFor=\\\"let photoModel of fbCollection.photos;\\\">\\r\\n                <h4>#{{photoModel.id}}</h4>\\r\\n                <div class=\\\"btn-container\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add\\\" (click)=\\\"onAddPhotoModel(photoModel)\\\">\\r\\n                </div>                 \\r\\n                <img class=\\\"img img-responsive\\\" src=\\\"{{photoModel.source}}\\\">\\r\\n                <div class=\\\"name\\\">{{photoModel.name}}</div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Photos from Table</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"photoCollection.photos\\\">\\r\\n        Total: {{photoCollection.photos.length}}\\r\\n        <ul class=\\\"list-inline photo-container\\\">\\r\\n          <li *ngFor=\\\"let photoModel of photoCollection.photos;\\\">\\r\\n            <h4>{{photoModel.uid}}</h4>\\r\\n            <div class=\\\"btn-container\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Delete\\\" (click)=\\\"onDeletePhotoModel(photoModel)\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Update\\\" (click)=\\\"onUpdatePhotoModel(photoModel)\\\">\\r\\n            </div>\\r\\n            <img class=\\\"img img-responsive\\\" src=\\\"{{imageHostPath}}{{photoModel.source}}\\\">\\r\\n            <div class=\\\"name\\\">{{photoModel.name}}</div>            \\r\\n          </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n</section>\\r\\n\";\n\n/***/ }),\n\n/***/ 507:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\r\n\tvar core_1 = __webpack_require__(5);\r\n\tvar common_1 = __webpack_require__(38);\r\n\tvar router_1 = __webpack_require__(41);\r\n\tvar AdminComponent = (function () {\r\n\t    function AdminComponent(router, route, location) {\r\n\t        this.router = router;\r\n\t        this.route = route;\r\n\t        this.location = location;\r\n\t        console.log('< AdminComponent > Component called...');\r\n\t    }\r\n\t    AdminComponent.prototype.ngOnInit = function () {\r\n\t        console.log('AdminComponent ::::');\r\n\t        this.router.queryParams.subscribe(function (params) {\r\n\t            console.log('ngOnInit::val------------------:', params);\r\n\t            if (!isNaN(params.id)) {\r\n\t                console.log('ngOnInit::val------------------:Valid param id', params);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    return AdminComponent;\r\n\t}());\r\n\tAdminComponent = __decorate([\r\n\t    core_1.Component({\r\n\t        selector: 'admin-component',\r\n\t        template: __webpack_require__(508),\r\n\t        styles: [__webpack_require__(509)]\r\n\t    }),\r\n\t    __metadata(\"design:paramtypes\", [router_1.ActivatedRoute,\r\n\t        router_1.Router,\r\n\t        common_1.Location])\r\n\t], AdminComponent);\r\n\texports.AdminComponent = AdminComponent;\r\n\n\n/***/ }),\n\n/***/ 508:\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<router-outlet></router-outlet>\";\n\n/***/ }),\n\n/***/ 509:\n74\n\n});\n\n\n// WEBPACK FOOTER //\n// admin.6ada7dd27f74950d0f7b.js","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { AdminModule } from './app/AdminModule';\r\n\r\nif (process && process.env.ENV === 'production') {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AdminModule);\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/Admin.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { BrowserModule }  from '@angular/platform-browser';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AdminController } from './admin/controller/AdminController';\r\nimport { AdminHeader } from './admin/header/Header';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { trigger,state,style,animate,transition }from '@angular/animations';\r\nimport { Login } from \"./admin/login/Login\";\r\nimport { Events } from \"./admin/events/Events\";\r\nimport { Albums } from \"./admin/albums/Albums\";\r\nimport { Posts } from \"./admin/posts/Posts\";\r\nimport { Photos } from \"./admin/photos/Photos\";\r\nimport { AuthGuard } from \"./admin/AuthGuard\";\r\nimport { ApiService } from \"./ApiService\";\r\nimport { AdminComponent } from \"./admin/component/AdminComponent\";\r\n\r\nconst adminRoutes: Routes = [ \r\n    {\r\n        path: '',\r\n        component: AdminComponent,\r\n        canActivate: [AuthGuard],\r\n        children: [\r\n          {\r\n            path: '',\r\n            canActivateChild: [AuthGuard],\r\n            children: [\r\n              { path: 'events', component: Events },\r\n              { path: 'albums', component: Albums },\r\n              { \r\n                  path: 'posts',\r\n                  component: Posts\r\n              },\r\n              { \r\n                  path: 'photos/:albumId',\r\n                  component: Photos,\r\n                  data: { albumId: 'albumId' }\r\n              },\r\n              { path: 'logout', component: Login },\r\n              { path: '', component: Login },\r\n              { path: '**', component: Login }\r\n            ]\r\n          }\r\n        ]\r\n    },\r\n    /*{\r\n        path: 'login',\r\n        component: Login\r\n    },\r\n    {\r\n        path: 'login/:reason',\r\n        component: Login\r\n    },\r\n    {\r\n        path: 'events',\r\n        component: Events\r\n    },\r\n    {\r\n        path: 'albums',\r\n        component: Albums\r\n    },\r\n    {\r\n        path: 'photos/:albumId',\r\n        component: Photos,\r\n        data: { albumId: 'albumId' }\r\n    },\r\n    {\r\n        path: 'posts',\r\n        component: Posts\r\n    },\r\n    {\r\n        path: '*',\r\n        component: Login\r\n    },\r\n    {\r\n        path: '**',\r\n        component: Login\r\n    }*/];\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tBrowserModule,\r\n\t\tHttpModule,\r\n    \tJsonpModule,\r\n    \tFormsModule,\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        RouterModule.forRoot(adminRoutes)\r\n\t],\r\n\tdeclarations: [\r\n        AdminController,\r\n        AdminComponent,\r\n        AdminHeader,\r\n        Events,\r\n        Albums,\r\n        Photos,\r\n        Posts,\r\n        Login\r\n\t],\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n\tbootstrap: [ AdminController ],\r\n\tproviders: [ApiService, AuthGuard]\r\n})\r\n\r\nexport class AdminModule { }\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/AdminModule.ts","import { Component, OnInit } from '@angular/core';\r\nimport { Location} from '@angular/common';\r\nimport { Router, ActivatedRoute} from '@angular/router';\r\nimport '../../../../public/css/styles.css';\r\n\r\n@Component({\r\n  selector: 'app-admin',\r\n  template: require('./controller.html'),\r\n  styles: [require('./controller.css')]\r\n})\r\n\r\nexport class AdminController implements OnInit {\r\n\r\n    constructor (\r\n    \tprivate router:ActivatedRoute,\r\n\t\t  private route:Router,\r\n\t\t  private location:Location) {\r\n        console.log('< admin-app > Component called...');\r\n    }\r\n\r\n    ngOnInit () {\r\n       console.log('Admin Controller::::');\r\n       this.router.queryParams.subscribe((params:any) => {\r\n\t       console.log('ngOnInit::val------------------:', params);\r\n\t       \tif (!isNaN(params.id)) {\r\n\t       \t\tconsole.log('ngOnInit::val------------------:Valid param id', params);\r\n\t       \t}\r\n\t    });\r\n    }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/controller/AdminController.ts","module.exports = \"<!-- <div class=\\\"container\\\">\\r\\n\\t<admin-header></admin-header>\\r\\n</div>\\r\\n<router-outlet></router-outlet> -->\\r\\n<div class=\\\"container\\\">\\r\\n\\t<admin-header></admin-header>\\r\\n\\t<admin-component></admin-component>\\r\\n</div>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/controller/controller.html\n// module id = 73\n// module chunks = 0","module.exports = \"#main {}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/controller/controller.css\n// module id = 74\n// module chunks = 0","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'admin-header',\r\n  template: require('./header.html')\r\n})\r\n\r\nexport class AdminHeader {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/header/Header.ts","module.exports = \"<header>\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<div class=\\\"col-sm-12\\\">\\r\\n\\t\\t\\t<ul class=\\\"list-inline\\\" style=\\\"border-bottom: 1px solid #CCC; padding: 10px 5px; margin-bottom: 20px;\\\">\\r\\n                <li>\\r\\n                    <!--<a routerLink=\\\"/school\\\" routerLinkActive=\\\"active\\\">School</a>-->\\r\\n                   <!--  <a [routerLink]=\\\"['/events']\\\">Events</a> -->\\r\\n                    <a routerLink=\\\"/events\\\" routerLinkActive=\\\"active\\\">Events</a>\\r\\n                </li>\\r\\n\\t\\t\\t\\t<li>\\r\\n                    <!-- <a [routerLink]=\\\"['/posts']\\\">Posts</a> -->\\r\\n                    <a routerLink=\\\"/posts\\\" routerLinkActive=\\\"active\\\">Posts</a>\\r\\n                </li>\\r\\n                <li>\\r\\n                    <a [routerLink]=\\\"['/albums']\\\">Albums</a>\\r\\n                </li>\\r\\n                 <li style=\\\"float: right;\\\">\\r\\n                    <a [routerLink]=\\\"['/']\\\">Log out</a>\\r\\n                </li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</header>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/header/header.html\n// module id = 76\n// module chunks = 0","/**\r\n * Created by balank on 8/09/2017.\r\n */\r\nimport {Component,  ViewChildren, QueryList, OnInit, isDevMode} from '@angular/core';\r\nimport {ApiService} from './../../ApiService';\r\nimport {AuthGuard} from './../AuthGuard';\r\nimport {PagingData, Cursors} from '../model/PagingData';\r\nimport * as moment from 'moment';\r\nimport {Subject, Observable} from \"rxjs\";\r\nimport { ENV } from '../../environments/environment';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-login',\r\n\ttemplate: require('./login.html'),\r\n\tproviders: [ApiService]\r\n})\r\n\r\nexport class Login implements OnInit {\r\n\r\n\tpublic userName:string;\r\n\r\n\tpublic password:string;\r\n\r\n\tpublic hostApi:string = ENV.HOST_API_URL;\r\n\r\n\tpublic _REASON:string = 'Session Expired. Please login again.';\r\n\r\n\tpublic reason:string = '';\r\n\r\n\tconstructor(\r\n\t\tprivate apiService: ApiService, \r\n\t\tpublic authGaurd: AuthGuard, \r\n\t\tprivate router: ActivatedRoute) {\r\n\t\tconsole.log('Photos component init::AuthGuard', authGaurd);\r\n\t}\r\n\r\n\tngOnInit () {\r\n\t\tconsole.log( process.env.ENV, ' ::: ENV VARS::', ENV, ':::authGaurd:::', this.authGaurd);\r\n\t\tthis.authGaurd.doLogout();\r\n\t\tthis.reason = '';\r\n\t\tthis.router.params.forEach((params: Params) => {\r\n\t    \tif (params['reason']) {\r\n\t    \t\tthis.reason = this._REASON;\r\n\t    \t}\r\n\t    });\r\n\t}\r\n\r\n\tpublic onLoginClick () {\r\n\t\tconsole.log('onLoginClick');\r\n\t\t//document.forms[0].submit();\r\n\t\tlet loginModel = new LoginModel(this.userName, this.password);\r\n\t\tthis.authGaurd.doLogin(loginModel);\r\n\t}\r\n\r\n\r\n}\r\n\r\nconst apiUrl = process.env.API_URL;\r\n\r\nexport class LoginModel {\r\n\r\n\tpublic userName:string;\r\n\r\n\tpublic password:string;\r\n\r\n\tconstructor(userName:string, password:string) {\r\n\t\tconsole.log('Login component init');\r\n\t\tthis.userName = userName;\r\n\t\tthis.password = password;\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/login/Login.ts","import { Injectable }     from '@angular/core';\r\nimport { CanActivate, CanActivateChild, Router, ActivatedRouteSnapshot,\r\n  RouterStateSnapshot }    from '@angular/router';\r\nimport { ApiService} from '../ApiService';\r\nimport { LoginModel} from './login/Login';\r\nimport { ENV} from '../environments/environment';\r\nimport { Subject, Observable} from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate, CanActivateChild {\r\n\r\n\tpublic isLoggedIn:boolean = false;\r\n\r\n\tconstructor(private apiService: ApiService, private router: Router) {\r\n\t\tconsole.log('AuthGuard#-----------------------------#constructor:this.isLoggedIn ,', this.isLoggedIn);\r\n\t\tthis.apiService = apiService;\r\n\t\tconsole.log('AuthGaurd::', apiService);\r\n\t}\r\n\r\n\tcanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n\t\tconsole.log('AuthGuard#canActivate called for state.url', state.url, ' isLoggedIn:', this.isLoggedIn);\r\n\t\tif  (state.url === '/login' || state.url === '/' || state.url === '/admin') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn this.isLoggedIn;\t\r\n\t}\r\n\r\n\tcanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\t\tconsole.log('AuthGuard#canActivateChild called:this.isLoggedIn ,', this.isLoggedIn);\r\n\t\tconsole.log('AuthGuard#canActivateChild called:this.apiService.isLoggedIn', this.apiService.isLoggedIn);\r\n\t\t//return this.permissions.canActivate(this.currentUser, route.params.id);\r\n\t\t//return false;\r\n\t    //return this.canActivate(route, state);\r\n\t    if  (state.url === '/login' || state.url === '/') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn this.isLoggedIn;\t\r\n\t}\r\n\r\n\tpublic doLogin(loginModel:LoginModel):void {\r\n\t\tlet url = ENV.HOST_API_URL + '/authorize.php';\r\n\r\n\t\tthis.apiService.post(url, loginModel).subscribe((response:any) => {\r\n\t\t\tconsole.log('checkLoggedInsTate: response');\r\n\t\t\tif (response.success) {\r\n\t\t\t\tconsole.log('checkLoggedInsTate: this.isLoggedIn: before', this.isLoggedIn);\r\n\t\t\t\tthis.isLoggedIn = true;\r\n\t\t\t\tconsole.log('checkLoggedInsTate: this.isLoggedIn: after', this.isLoggedIn);\r\n\t\t\t\tthis.router.navigate(['/events']);\r\n\t\t\t} else {\r\n\t\t\t\tthis.isLoggedIn = false;\r\n\t\t\t}\t\r\n\t\t},\r\n\t\t(err:any) => {\r\n\t\t\tconsole.log('err response:', err);\r\n\t\t\tthis.isLoggedIn = false;\r\n\t\t});\r\n\t}\r\n\r\n\tpublic doLogout():void {\r\n\t\tthis.isLoggedIn = false;\r\n\t}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/AuthGuard.ts","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <h3>Login</h3>\\r\\n        <p class=\\\"bg-danger\\\">{{reason}}</p>\\r\\n        <form class=\\\"col-sm-12 form-horizontal\\\" action=\\\"{{hostApi}}/authorize.php\\\" method=\\\"post\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\">User name</label>\\r\\n                    <div class=\\\"col-sm-5\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"userName\\\" [(ngModel)]=\\\"userName\\\" name=\\\"userName\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"col-sm-2 control-label\\\">Password</label>\\r\\n                    <div class=\\\"col-sm-5\\\">\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-sm-2\\\"></div>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Login\\\" (click)=\\\"onLoginClick()\\\">\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/login/login.html\n// module id = 86\n// module chunks = 0","/**\r\n * Created by balank on 8/09/2017.\r\n */\r\nimport {Component,  ViewChildren, QueryList} from '@angular/core';\r\nimport { URLSearchParams } from '@angular/http';\r\nimport {ApiService} from './../../ApiService';\r\nimport {EventsCollection, EventModel, EventParams} from './EventsCollection';\r\nimport {PagingData, Cursors} from '../model/PagingData';\r\nimport * as moment from 'moment';\r\nimport {Subject, Observable} from \"rxjs\";\r\nimport {ENV} from '../../environments/environment';\r\n\r\n@Component({\r\n\tselector: 'app-events',\r\n\ttemplate: require('./events.html'),\r\n\tproviders: [ApiService]\r\n})\r\n\r\nexport class Events {\r\n\r\n\t//VimonishaExhibitions?fields=events.since(1486984200).until(1504960500).limit(100);\r\n\r\n\tpublic message:string = '';\r\n\r\n\tpublic eventsCollection:EventsCollection = new EventsCollection();\t\r\n\r\n\tpublic fbCollection:EventsCollection = new EventsCollection();\r\n\r\n\tpublic eventParams:EventParams;\r\n\r\n\tprivate fromDate: string = 'NONE';\r\n\r\n    private toDate: string = moment().format(ENV.DATE_TIME_FORMAT);\r\n\r\n    public accessToken: string = '';\r\n\r\n\tconstructor(private apiService: ApiService) {\r\n\t\tconsole.log('Events component init');\r\n\t\tthis.getEventsFromTable();\r\n\t}\r\n\r\n\tpublic setEvents (collectionModel:EventsCollection, eventsArray:Array<any>):Boolean {\r\n\t\tconsole.log('setEvents:::-------------------------------------------------------------------------------------');\r\n\t\tlet events:Array<EventModel> = eventsArray.map((model:any) => {\t\t\t\r\n\t\t\tmodel.endTime = model.end_time || model.endTime;\r\n\t\t\tmodel.startTime = model.start_time || model.startTime;\r\n\t\t\tdelete model.end_time;\r\n\t\t\tdelete model.start_time;\r\n\t\t\tlet eventModel = new EventModel(model);\r\n\t\t\tconsole.log(collectionModel.events.length, ':setEvents:::-----------------------------------------------------NEW eventModel->', eventModel);\r\n\t\t\tcollectionModel.events.push(eventModel);\r\n\t\t\treturn eventModel;\r\n\t\t});\r\n\t\treturn events.length > 0 ? true : false;\r\n\t}\r\n\r\n\tpublic onGetEventClick ():void {\r\n\t\tlet events = new Array<EventModel>();\r\n\t\tthis.eventParams = new EventParams();\r\n\t\tthis.getEvents(this.eventParams, events).subscribe(\r\n\t\t\t(response) => { \r\n\t\t\t\tconsole.log('getEvents success::::::::::::::::::::::::::::::::::::::::::::::::::::', response);\r\n\t\t\t\tthis.setEvents(this.fbCollection, response.data);\r\n\t\t\t},\r\n\t\t\t(err) => { console.log('getEvents err:::', err)},\r\n\t\t\t() => {console.log('getEvents final:::')}\r\n\t\t);\r\n\t}\r\n\r\n\tprivate dialogSubject: Subject<DataEvent> =  new Subject<DataEvent>();\r\n\r\n\tpublic getEvents (eventParams:EventParams, collection:Array<any>):Observable<DataEvent> {\r\n\t\tconsole.log('getEvents....called with eventParams:', eventParams);\r\n\t\tthis.message = 'In progress...';\r\n\t\t\r\n        if (!this.isValidDateRange(this.fromDate, this.toDate)) {\r\n        \tconsole.log('Invalid Date range!!!!');\r\n            this.message = 'Invalid Date range......';\r\n            return;\r\n        }\r\n\r\n        console.log('is valid date range', this.fromDate + ' : to : ' + this.toDate);\r\n        let since = moment(this.fromDate, ENV.DATE_TIME_FORMAT).unix();\r\n        let until = moment(this.toDate, ENV.DATE_TIME_FORMAT).unix();\r\n\r\n\t\tlet url = ENV.FB_GRAPH_URL + ENV.FB_PROFILE_ID + '/events';\r\n\t\tlet params  = new URLSearchParams(); //TODO: IE fix, polyfill\r\n\r\n\t\tparams.append('access_token', this.accessToken);\r\n\t\tparams.append('since', since.toString());\r\n\t\tparams.append('until', until.toString());\r\n\t\tparams.append('fields', eventParams.fields);\r\n\t\tparams.append('limit', eventParams.limit);\r\n\t\tparams.append('pretty', eventParams.pretty);\r\n\r\n\t\tif (eventParams.after !== '') {\r\n\t\t\tconsole.log('after is present...ADDING after');\r\n\t\t\tparams.append('after', eventParams.after);\r\n\t\t}\r\n\r\n\t\turl = url + '?' + params.toString();\r\n\t\tconsole.log('url->', url);\t\t\r\n\r\n\t\tthis.apiService.fetch(url).subscribe(\r\n\t\t\t(response: any) => {\r\n\t\t\t\tconsole.log('getEvents RESPONSE ->', response);\r\n\t\t\t\tif (response.data && response.data.length > 0) {\r\n\t\t\t\t\tlet pagingData:PagingData = new PagingData(response.paging);\r\n\t\t\t\t\t//let isSet:Boolean = this.setEvents(this.fbCollection, response.data);\r\n\t\t\t\t\tresponse.data.filter((dataModel:any)=>{ collection.push(dataModel)});\r\n\r\n\t\t\t\t\tif (pagingData.cursors.after !== '') {\r\n\t\t\t\t\t\tconsole.log('pagingData.cursor.after PRESENT');\r\n\t\t\t\t\t\tthis.eventParams.after = pagingData.cursors.after;\r\n\t\t\t\t\t\treturn this.getEvents(this.eventParams, collection);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.eventParams.after = '';\r\n\t\t\t\t\t\tconsole.log('---------------------------------------------------- NOT PRESENT--------ALL DONE!!');\r\n\t\t\t\t\t\tthis.dialogSubject.next({data: collection});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.message = 'Complete!';\r\n\t\t\t\t\tconsole.log('-------------------------------------------ALL DONE!!');\r\n\t\t\t\t\tthis.dialogSubject.next({data: collection});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(err) => { \r\n\t\t\t\tthis.message = JSON.stringify(err);\r\n\t\t\t});\r\n\r\n\t\treturn this.dialogSubject;\r\n\t}\r\n\r\n\tpublic onSubmitEvents1 () {\r\n\t\tconsole.log('SUBMIT onSubmitEvents1...', this.fbCollection);\r\n\t\tthis.submitEvents(this.fbCollection);\r\n\t}\r\n\r\n\tpublic submitEvents (collection:EventsCollection) {\r\n\t\tconsole.log('SUBMIT eventsCollection...', collection);\r\n\t\tlet url = ENV.HOST_API_URL + '/events_post.php';\r\n\t\tthis.apiService.post(url, collection).subscribe((response:any) => {\r\n\t\t\tconsole.log('eventModel POST response recieved....', response);\r\n\t\t\tif (response && response.success) {\r\n\t\t\t\tthis.fbCollection = new EventsCollection();\r\n\t\t\t\tthis.getEventsFromTable();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic addEventModel (eventModel:EventModel) {\r\n\t\tlet eventsCollection = new EventsCollection();\r\n\t\teventsCollection.events.push(eventModel);\r\n\t\tconsole.log('SUBMIT addEventModel...', eventsCollection);\r\n\t\tthis.submitEvents(eventsCollection);\r\n\t}\r\n\r\n\tpublic onDeleteEvent (eventModel:EventModel) {\r\n\t\tlet url = ENV.HOST_API_URL + '/events_delete.php';\r\n\t\tconsole.log('DELETE eventModel...', eventModel);\r\n\t\tthis.apiService.post(url, eventModel).subscribe((response:any) => {\r\n\t\t\tconsole.log('eventModel DELETE:POST response recieved....', response);\r\n\t\t\tif (response && response.success) {\r\n\t\t\t\tconsole.log('Deleted successfully....');\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Delete UNSUCCESSFUL');\r\n\t\t\t}\t\r\n\t\t\tthis.getEventsFromTable();\t\t\r\n\t\t});\r\n\t}\r\n\r\n\tpublic onUpdateEvent (eventModel:EventModel) {\r\n\t\tlet url = ENV.HOST_API_URL +  '/events_update.php';\r\n\t\tconsole.log('UPDATE eventModel...', eventModel);\r\n\t\t/*this.apiService.post(url, eventModel).subscribe((response:any) => {\r\n\t\t\tconsole.log('eventModel UPDATE:POST response recieved....', response);\r\n\t\t});*/\r\n\t}\r\n\r\n\tpublic getEventsFromTable () {\r\n\t\tconsole.log('getEventsFromTable...');\r\n\t\tlet url = ENV.HOST_API_URL + '/events_get.php';\r\n\t\tthis.eventsCollection.events = new Array<EventModel>();\r\n\t\treturn this.apiService.fetch(url).subscribe(\r\n\t\t\t(response: any) => {\r\n\t\t\t\tconsole.log('getEventsFromTable response ->', response);\r\n\t\t\t\tlet isSet:Boolean = this.setEvents(this.eventsCollection, response.events);\r\n\t\t\t\tthis.setLastEndTime();\r\n\t\t\t},\r\n\t\t\t(err) => { \r\n\t\t\t\tconsole.log('getEventsFromTable ERR ->', err);\r\n\t\t\t\tthis.message = JSON.stringify(err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic setLastEndTime () {\t\t\r\n\t\tlet total = this.eventsCollection.events.length;\r\n\t\tconsole.log('setLastEndTime', total);\r\n\t\tif (total > 0) {\r\n\t\t\tlet lastModel = this.eventsCollection.events[0];\r\n\t\t\tthis.fromDate = lastModel.endTime;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isValidDateRange (fromDate:string, toDate:string):Boolean {\t\t\r\n        if (moment(this.fromDate, ENV.DATE_TIME_FORMAT).isValid() && moment(this.toDate, ENV.DATE_TIME_FORMAT).isValid()\r\n            && (moment(this.fromDate, ENV.DATE_TIME_FORMAT).isBefore(moment(this.toDate, ENV.DATE_TIME_FORMAT)))) {\r\n            console.log('IS VALID DATE RANGE:', this.fromDate + ' : to : ' + this.toDate);\r\n            return true;\r\n        }\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport interface DataEvent {\r\n\r\n    data:any;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/events/Events.ts","export class Cursors {\r\n\t\r\n\tpublic before: string;\r\n\r\n\tpublic after: string;\r\n\r\n\tpublic cursor:Cursors;\r\n\r\n\tconstructor (before:string, after:string) {\r\n\t\tthis.before = before || '';\r\n\t\tthis.after = after || '';\r\n\t}\r\n}\r\n\r\nexport class PagingData {\r\n\t\r\n\tpublic next: string;\r\n\r\n\tpublic previous: string;\r\n\r\n\tpublic cursors:Cursors;\r\n\r\n\tconstructor (pagingData:PagingData) {\r\n\t\tthis.next = pagingData.next || 'none';\r\n\t\tthis.previous = pagingData.previous || 'none';\r\n\r\n\t\tif (pagingData.cursors) {\r\n\t\t\tthis.cursors = pagingData.cursors;\r\n\t\t} else {\r\n\t\t\tthis.cursors = new Cursors('', '');\r\n\t\t}\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/model/PagingData.ts","module.exports = \"<section class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">Access token</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accessToken\\\" [(ngModel)]=\\\"accessToken\\\" name=\\\"accessToken\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">From</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" name=\\\"fromDate\\\">\\r\\n                </div>\\r\\n                <label class=\\\"col-sm-1 control-label\\\">To</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-success\\\" value=\\\"Get Events from Facebook\\\" (click)=\\\"onGetEventClick()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add Events to DB\\\" (click)=\\\"onSubmitEvents1()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Get Events from DB\\\" (click)=\\\"getEventsFromTable()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <h2 class=\\\"text-danger\\\">{{message}}</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Facebook</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"col-sm-2\\\">Start Time <br/> End Time</th>\\r\\n                <th>Name</th>\\r\\n                <th class=\\\"col-sm-2\\\">URL : {{fbCollection.events.length}}</th>\\r\\n                <th class=\\\"col-sm-2\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n            <tr *ngFor=\\\"let eventModel of fbCollection.events;\\\">\\r\\n                <td>{{eventModel.startTime}} <br/> {{eventModel.endTime}}</td>\\r\\n                <td>{{eventModel.name}}</td>\\r\\n                <td><img class=\\\"img img-responsive\\\" src=\\\"{{eventModel.cover.source}}\\\"></td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add\\\" (click)=\\\"addEventModel(eventModel)\\\">\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Table</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"col-sm-2\\\">Start Time <br/> End Time</th>\\r\\n                <th>Name</th>\\r\\n                <th class=\\\"col-sm-2\\\">URL : {{eventsCollection.events.length}}</th>\\r\\n                <th class=\\\"col-sm-2\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n            <tr *ngFor=\\\"let eventModel of eventsCollection.events;\\\">\\r\\n                <td>{{eventModel.startTime}} <br/> {{eventModel.endTime}}</td>\\r\\n                <td>\\r\\n                    <h4>{{eventModel.name}}</h4>\\r\\n                    <h4>{{eventModel.name}}</h4>\\r\\n                </td>\\r\\n                <td><img class=\\\"img img-responsive\\\" src=\\\"{{eventModel.cover.source}}\\\"></td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Update\\\" (click)=\\\"onUpdateEvent(eventModel)\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Delete\\\" (click)=\\\"onDeleteEvent(eventModel)\\\">\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n</section>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/events/events.html\n// module id = 498\n// module chunks = 0","/**\r\n * Created by balank on 8/09/2017.\r\n */\r\nimport {Component,  ViewChildren, QueryList} from '@angular/core';\r\nimport {ApiService} from './../../ApiService';\r\nimport {AlbumCollection} from './../photos/PhotoCollection';\r\nimport {PagingData, Cursors} from '../model/PagingData';\r\nimport * as moment from 'moment';\r\nimport {Subject, Observable} from \"rxjs\";\r\n\r\n@Component({\r\n\tselector: 'app-albums',\r\n\ttemplate: require('./albums.html'),\r\n\tproviders: [ApiService]\r\n})\r\n\r\nexport class Albums {\r\n\r\n\tpublic albumCollection:AlbumCollection = new AlbumCollection();\r\n\r\n\tconstructor(private apiService: ApiService) {\r\n\t\tconsole.log('Albums component init');\r\n\t}\r\n\t\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/albums/Albums.ts","module.exports = \"<section class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <h3>Albums</h3>\\r\\n\\r\\n        Total: {{albumCollection.albums.length}}\\r\\n        <ul class=\\\"list-inline album-container\\\">\\r\\n            <li *ngFor=\\\"let albumModel of albumCollection.albums;\\\">\\r\\n                <!-- href=\\\"admin/photos/{{albumModel.id}}\\\" -->\\r\\n                <a [routerLink]=\\\"['/photos', albumModel.id]\\\" >\\r\\n                    <h4>{{albumModel.name}}</h4>\\r\\n                    <div class=\\\"name\\\">#{{albumModel.id}}</div>\\r\\n                </a>\\r\\n            </li>\\r\\n        </ul>\\r\\n\\r\\n    </div>\\r\\n</section>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/albums/albums.html\n// module id = 501\n// module chunks = 0","/**\r\n * Created by balank on 8/09/2017.\r\n */\r\nimport {Component,  ViewChildren, QueryList} from '@angular/core';\r\nimport { URLSearchParams } from '@angular/http';\r\nimport {ApiService} from './../../ApiService';\r\nimport {PostCollection, PostModel, PostParams} from './PostCollection';\r\nimport {PagingData, Cursors} from '../model/PagingData';\r\nimport * as moment from 'moment';\r\nimport {Subject, Observable} from \"rxjs\";\r\nimport {ENV} from '../../environments/environment';\r\n\r\n@Component({\r\n    selector: 'app-posts',\r\n    template: require('./posts.html'),\r\n    providers: [ApiService]\r\n})\r\n\r\nexport class Posts {\r\n\r\n    //VimonishaExhibitions/posts?fields=events.since(1486984200).until(1504960500).limit(100);\r\n\r\n    public message:string = '';\r\n\r\n    public postCollection:PostCollection = new PostCollection();    \r\n\r\n    public fbCollection:PostCollection = new PostCollection();\r\n\r\n    public postParams:PostParams;\r\n\r\n    private fromDate: string = 'NONE';\r\n\r\n    private toDate: string = moment().format(ENV.DATE_TIME_FORMAT);\r\n\r\n    public accessToken: string = '';\r\n\r\n    constructor(private apiService: ApiService) {\r\n        console.log('Post component init');\r\n        this.getPostsFromTable();\r\n    }\r\n\r\n    public setPosts (collectionModel:PostCollection, postsArray:Array<any>):Boolean {\r\n        console.log('setPosts::-------------------------------------------------------------------------------------');\r\n        debugger;\r\n        let posts:Array<PostModel> = postsArray.map((model:any) => {\r\n            model.createdTime = model.created_time || model.createdTime;\r\n            delete model.created_time;\r\n            let postModel = new PostModel(model);\r\n            console.log(collectionModel.posts.length, ':setPosts:::-----------------------------------------------------NEW postModel->', postModel);\r\n            collectionModel.posts.push(postModel);\r\n            return postModel;\r\n        });\r\n        return posts.length > 0 ? true : false;\r\n    }\r\n\r\n    public onGetPostsClick ():void {\r\n        let posts = new Array<PostModel>();\r\n        this.postParams = new PostParams();\r\n        this.getPosts(this.postParams, posts).subscribe(\r\n            (response) => { \r\n                console.log('posts success::::::::::::::::::::::::::::::::::::::::::::::::::::', response);\r\n                this.setPosts(this.fbCollection, response.data);\r\n            },\r\n            (err) => { console.log('posts err:::', err)},\r\n            () => {console.log('posts final:::')}\r\n        );\r\n    }\r\n\r\n    private dialogSubject: Subject<DataEvent> =  new Subject<DataEvent>();\r\n\r\n    public getPosts (postParams:PostParams, collection:Array<any>):Observable<DataEvent> {\r\n        console.log('getEvents....called with postParams:', postParams);\r\n        this.message = 'In progress...';\r\n        \r\n        if (!this.isValidDateRange(this.fromDate, this.toDate)) {\r\n            console.log('Invalid Date range!!!!');\r\n            this.message = 'Invalid Date range......';\r\n            return;\r\n        }\r\n\r\n        console.log('is valid date range', this.fromDate + ' : to : ' + this.toDate);\r\n        let since = moment(this.fromDate, ENV.DATE_TIME_FORMAT).unix();\r\n        let until = moment(this.toDate, ENV.DATE_TIME_FORMAT).unix();\r\n\r\n        let url = ENV.FB_GRAPH_URL + ENV.FB_PROFILE_ID + '/posts';\r\n        let params  = new URLSearchParams(); //TODO: IE fix, polyfill\r\n\r\n        params.append('access_token', this.accessToken);\r\n        params.append('since', since.toString());\r\n        params.append('until', until.toString());\r\n        params.append('fields', postParams.fields);\r\n        params.append('limit', postParams.limit);\r\n        params.append('pretty', postParams.pretty);\r\n\r\n        if (postParams.after !== '') {\r\n            console.log('after is present...ADDING after');\r\n            params.append('after', postParams.after);\r\n        }\r\n\r\n        url = url + '?' + params.toString();\r\n        console.log('url->', url);        \r\n\r\n        this.apiService.fetch(url).subscribe(\r\n            (response: any) => {\r\n                console.log('getEvents RESPONSE ->', response);\r\n                if (response.data && response.data.length > 0) {\r\n                    let pagingData:PagingData = new PagingData(response.paging);\r\n                    //let isSet:Boolean = this.setEvents(this.fbCollection, response.data);\r\n                    response.data.filter((dataModel:any)=>{ collection.push(dataModel)});\r\n\r\n                    if (pagingData.cursors.after !== '') {\r\n                        console.log('pagingData.cursor.after PRESENT');\r\n                        this.postParams.after = pagingData.cursors.after;\r\n                        return this.getPosts(this.postParams, collection);\r\n                    } else {\r\n                        this.postParams.after = '';\r\n                        console.log('---------------------------------------------------- NOT PRESENT--------ALL DONE!!');\r\n                        this.dialogSubject.next({data: collection});\r\n                    }\r\n                    \r\n                } else {\r\n                    this.message = 'Complete!';\r\n                    console.log('-------------------------------------------ALL DONE!!');\r\n                    this.dialogSubject.next({data: collection});\r\n                }\r\n            },\r\n            (err) => { \r\n                this.message = JSON.stringify(err);\r\n            });\r\n\r\n        return this.dialogSubject;\r\n    }\r\n\r\n    public onSubmitPosts () {\r\n        console.log('SUBMIT onSubmitEvents1...', this.fbCollection);\r\n        this.submitPosts(this.fbCollection);\r\n    }\r\n\r\n    public submitPosts (collection:PostCollection) {\r\n        console.log('SUBMIT postCollection...', collection);\r\n        let url = ENV.HOST_API_URL + '/posts_post.php';\r\n        this.apiService.post(url, collection).subscribe((response:any) => {\r\n            console.log('postModel POST response recieved....', response);\r\n            if (response && response.success) {\r\n                this.fbCollection = new PostCollection();\r\n                this.getPostsFromTable();\r\n            }\r\n        });\r\n    }\r\n\r\n    public addPostModel (postModel:PostModel) {\r\n        let postCollection = new PostCollection();\r\n        postCollection.posts.push(postModel);\r\n        console.log('SUBMIT addEventModel...', postCollection);\r\n        this.submitPosts(postCollection);\r\n    }\r\n\r\n    public onDeletePosts (postModel:PostModel) {\r\n        let url = ENV.HOST_API_URL + '/posts_delete.php';\r\n        console.log('DELETE postModel...', postModel);\r\n        this.apiService.post(url, postModel).subscribe((response:any) => {\r\n            console.log('postModel DELETE:POST response recieved....', response);\r\n            if (response && response.success) {\r\n                console.log('Deleted successfully....');\r\n            } else {\r\n                console.log('Delete UNSUCCESSFUL');\r\n            }    \r\n            this.getPostsFromTable();        \r\n        });\r\n    }\r\n\r\n    public onUpdatePosts (postModel:PostModel) {\r\n        let url = ENV.HOST_API_URL +  '/posts_update.php';\r\n        console.log('UPDATE postModel...', postModel);\r\n        /*this.apiService.post(url, postModel).subscribe((response:any) => {\r\n            console.log('postModel UPDATE:POST response recieved....', response);\r\n        });*/\r\n    }\r\n\r\n    public getPostsFromTable () {\r\n        console.log('getPostsFromTable...');\r\n        let url = ENV.HOST_API_URL + '/posts_get.php';\r\n        this.postCollection.posts = new Array<PostModel>();\r\n        return this.apiService.fetch(url).subscribe(\r\n            (response: any) => {\r\n                console.log('getPostsFromTable response ->', response);\r\n                let isSet:Boolean = this.setPosts(this.postCollection, response.posts);\r\n                this.setLastEndTime();\r\n            },\r\n            (err) => { \r\n                console.log('getPostsFromTable ERR ->', err);\r\n                this.message = JSON.stringify(err);\r\n            }\r\n        );\r\n    }\r\n\r\n    public setLastEndTime () {        \r\n        let total = this.postCollection.posts.length;\r\n        console.log('setLastEndTime', total);\r\n        if (total > 0) {\r\n            let lastModel = this.postCollection.posts[0];\r\n            this.fromDate = lastModel.createdTime;\r\n        }\r\n    }\r\n\r\n    public isValidDateRange (fromDate:string, toDate:string):Boolean {        \r\n        if (moment(this.fromDate, ENV.DATE_TIME_FORMAT).isValid() && moment(this.toDate, ENV.DATE_TIME_FORMAT).isValid()\r\n            && (moment(this.fromDate, ENV.DATE_TIME_FORMAT).isBefore(moment(this.toDate, ENV.DATE_TIME_FORMAT)))) {\r\n            console.log('IS VALID DATE RANGE:', this.fromDate + ' : to : ' + this.toDate);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport interface DataEvent {\r\n\r\n    data:any;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/posts/Posts.ts","/**\r\n * Created by balank on 24/09/2017.\r\n */\r\nimport {PagingData} from '../model/PagingData';\r\nimport * as moment from 'moment';\r\nimport {ENV} from '../../environments/environment';\r\n\r\n\r\nexport class PostParams  {\r\n\r\n    public fields:string = 'id,full_picture,description,name,created_time';\r\n\r\n    public limit:string = '10';\r\n\r\n    public pretty:string = '0';\r\n    \r\n    public before:string = '';\r\n\r\n    public after:string = '';\r\n\r\n    constructor () { }\r\n\r\n}\r\n\r\n\r\nexport class PostModel  {\r\n\r\n    public name:string;\r\n\r\n    public description:string;\r\n\r\n    public id:number;\r\n\r\n    public uid:number;\r\n\r\n    public fullPicture:string;\r\n\r\n    public createdTime:string;\r\n\r\n    constructor (postModel:any) {\r\n        this.name = postModel.name; //TODO: check for untitled string.\r\n        this.id = postModel.id;       \r\n        this.uid = postModel.uid; \r\n        this.description = postModel.description || '';\r\n        this.fullPicture = postModel.full_picture || '';\r\n        this.createdTime = moment(postModel.createdTime || '').format(ENV.DATE_TIME_FORMAT);\r\n    }\r\n\r\n}\r\n\r\nexport class PostCollection {\r\n\r\n    public posts:Array<PostModel> = new Array<PostModel>();\r\n\r\n    public id:string;\r\n\r\n    public paging:PagingData;\r\n\r\n    constructor () {}\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/posts/PostCollection.ts","module.exports = \"<section class=\\\"container\\\">\\r\\n\\t<div class=\\\"row\\\">\\r\\n        <form class=\\\"form-horizontal\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">Access token</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accessToken\\\" [(ngModel)]=\\\"accessToken\\\" name=\\\"accessToken\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">From</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" name=\\\"fromDate\\\">\\r\\n                </div>\\r\\n                <label class=\\\"col-sm-1 control-label\\\">To</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-success\\\" value=\\\"Get Posts from Facebook\\\" (click)=\\\"onGetPostsClick()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add Posts to DB\\\" (click)=\\\"onSubmitPosts()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Get Posts from DB\\\" (click)=\\\"getPostsFromTable()\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\t<div class=\\\"row\\\">\\r\\n        <h2 class=\\\"text-danger\\\">{{message}}</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Facebook</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n            <tr>\\r\\n                <th class=\\\"col-sm-2\\\">Created Time </th>\\r\\n                <th>Name</th>\\r\\n                <th class=\\\"col-sm-2\\\">URL : {{fbCollection.posts.length}}</th>\\r\\n                <th class=\\\"col-sm-2\\\">Actions</th>\\r\\n            </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n            <tr *ngFor=\\\"let postModel of fbCollection.posts;\\\">\\r\\n                <td>{{postModel.createdTime}}</td>\\r\\n                <td>\\r\\n                    {{postModel.name}}\\r\\n                    <div>\\r\\n                    {{postModel.description}}\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td><img class=\\\"img img-responsive\\\" src=\\\"{{postModel.fullPicture}}\\\"></td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add\\\" (click)=\\\"addPostModel(postModel)\\\">\\r\\n                </td>\\r\\n            </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t\\t<table class=\\\"table table-responsive table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th class=\\\"col-sm-1\\\">#Id</th>\\r\\n                    <th>Desc</th>\\r\\n                    <th class=\\\"col-sm-2\\\">Time</th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody >\\r\\n                <tr *ngFor=\\\"let postModel of postCollection.posts; let myIndex = index\\\">\\r\\n                    <td>\\r\\n                        <img class=\\\"img img-responsive\\\" src=\\\"{{postModel.fullPicture}}\\\">\\r\\n                    </td>\\r\\n                    <td>{{postModel.name}}</td>\\r\\n                    <td>{{postModel.createdTime}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n\\t\\t</table>\\r\\n\\t</div>\\r\\n\\r\\n</section>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/posts/posts.html\n// module id = 504\n// module chunks = 0","/**\r\n * Created by balank on 8/09/2017.\r\n */\r\nimport {Component,  ViewChildren, QueryList} from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { URLSearchParams } from '@angular/http';\r\nimport {ApiService} from './../../ApiService';\r\nimport {PhotoCollection, PhotoModel, PhotoParams, AlbumModel, AlbumCollection} from './PhotoCollection';\r\nimport {PagingData, Cursors} from '../model/PagingData';\r\nimport * as moment from 'moment';\r\nimport {Subject, Observable} from \"rxjs\";\r\nimport {ENV} from '../../environments/environment';\r\n\r\n@Component({\r\n\tselector: 'app-photos',\r\n\ttemplate: require('./photos.html'),\r\n\tproviders: [ApiService]\r\n})\r\n\r\nexport class Photos {\r\n\r\n\t//VimonishaExhibitions?fields=events.since(1486984200).until(1504960500).limit(100);\r\n\t//VimonishaExhibitions?fields=albums.id(178838325568799){photos}\r\n\t//178838325568799?fields=photos{id, source,name}\r\n\r\n\tpublic message:string = '';\r\n\r\n\tpublic albumId:string;\r\n\r\n\tpublic albumName:string = 'NOT KNOWN';\r\n\r\n\tpublic photoCollection:PhotoCollection;\t\r\n\r\n\tpublic fbCollection:PhotoCollection;\r\n\r\n\tpublic albumsCollection:AlbumCollection = new AlbumCollection();\r\n\r\n\tpublic photoParams:PhotoParams;\r\n\r\n\tprivate fromDate: string = 'NONE';\r\n\r\n\tpublic accessToken: string = '';\r\n\r\n    private toDate: string = moment().format(ENV.DATE_TIME_FORMAT);\r\n\r\n    private dialogSubject: Subject<DataEvent> =  new Subject<DataEvent>();\r\n\r\n    public imageHostPath:string = ENV.HOST_API_URL;\r\n\r\n\tconstructor(private apiService: ApiService,  private router: ActivatedRoute) {\r\n\t\tconsole.log('Photos component init');\r\n\t}\r\n\r\n\tpublic ngOnInit(): void {\r\n\t\tconsole.log('ngOnInit::');\r\n\t\tlet albumId:string = '';\r\n\t    this.router.params.forEach((params: Params) => {\r\n\t    \tconsole.log('ngOnInit::', params['albumId']);\r\n\t      \tthis.albumId = params['albumId'];\r\n\t    });\r\n\t    this.albumsCollection.albums.forEach((album:AlbumModel)=> {\r\n\t    \tif (album.id === this.albumId) {\r\n\t    \t\tthis.albumName = album.name;\r\n\t    \t}\r\n\t    });\r\n \t\tthis.photoCollection = new PhotoCollection(this.albumId);\t\r\n\t\tthis.fbCollection = new PhotoCollection(this.albumId);\r\n\t\tthis.getPhotosFromTable(this.albumId);\r\n  \t}\t\r\n\r\n\tpublic setPhotos (photosArr:Array<PhotoModel>, dataArray:Array<any>):Boolean {\r\n\t\tconsole.log('setPhotos:::-------------------------------------------------------------------------------------');\r\n\t\tlet photos:Array<PhotoModel> = dataArray.map((model:any) => {\r\n\t\t\tif (model.created_time)\t{\r\n\t\t\t\tmodel.createdTime = model.created_time;\r\n\t\t\t\tdelete model.created_time;\r\n\t\t\t}\r\n\t\t\tlet photoModel = new PhotoModel(model);\r\n\t\t\tconsole.log(photosArr.length, ':setPhotos:::------------------NEW photoModel->', photoModel);\r\n\t\t\tphotosArr.push(photoModel);\r\n\t\t\treturn photoModel;\r\n\t\t});\r\n\t\treturn photos.length > 0 ? true : false;\r\n\t}\r\n\r\n\tpublic onGetPhotosClick():void {\r\n\t\tthis.fbCollection = new PhotoCollection(this.albumId);\r\n\t\tlet photos = new Array<PhotoModel>();\r\n\t\tthis.photoParams = new PhotoParams(this.albumId);\r\n\t\tthis.dialogSubject =  new Subject<DataEvent>();\r\n\t\tconsole.log('onGetPhotosClick:::::::', photos);\r\n\r\n\t\tthis.getPhotos(this.photoParams, photos, false).subscribe(\r\n\t\t\t(response) => { \r\n\t\t\t\tconsole.log('getPhotos success::::::::::::::::::::::::::::::::::::::::::::::::::::', response);\r\n\t\t\t\tthis.setPhotos(this.fbCollection.photos, response.data);\r\n\t\t\t},\r\n\t\t\t(err) => { console.log('getPhotos err:::', err)},\r\n\t\t\t() => {console.log('getPhotos final:::')}\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tpublic getPhotosFromTable (albumId:string) {\r\n\t\tconsole.log('getEventsFromTable...');\r\n\t\tlet url = ENV.HOST_API_URL + '/photos_get.php?albumId=' + albumId;\r\n\t\tthis.photoCollection.photos = new Array<PhotoModel>();\r\n\t\treturn this.apiService.fetch(url).subscribe(\r\n\t\t\t(response: any) => {\r\n\t\t\t\tconsole.log('getPhotosFromTable response ->', response);\r\n\t\t\t\tthis.setPhotos(this.photoCollection.photos, response.photos);\r\n\t\t\t\tthis.setLastEndTime();\r\n\t\t\t},\r\n\t\t\t(err) => { \r\n\t\t\t\tconsole.log('getPhotosFromTable ERR ->', err);\r\n\t\t\t\tthis.message = JSON.stringify(err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onDeletePhotoModel(photoModel:PhotoModel):void {\r\n\t\tlet url = ENV.HOST_API_URL + '/photos_delete.php';\r\n\t\tconsole.log('onDeletePhotoModel POST ->', photoModel);\r\n\t\tthis.apiService.post(url, photoModel).subscribe(\r\n\t\t\t(response: any) => {\r\n\t\t\t\tconsole.log('onDeletePhotoModel response ->', response);\r\n\t\t\t\tthis.getPhotosFromTable(this.photoCollection.albumId);\r\n\t\t\t},\r\n\t\t\t(err) => { \r\n\t\t\t\tconsole.log('onDeletePhotoModel ERR ->', err);\r\n\t\t\t\tthis.message = JSON.stringify(err);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic onAddPhotoModel(photoModel:PhotoModel):void {\r\n\t\tlet indexId = this.fbCollection.photos.indexOf(photoModel);\r\n\t\tthis.fbCollection.photos.splice(indexId, 1);\r\n\t\tlet collection = this.fbCollection;\r\n\t\tcollection.photos = [photoModel];\r\n\t\tthis.submitPhotos(collection);\r\n\t}\r\n\r\n\r\n\tpublic onSubmitPhotos ():void {\r\n\t\tconsole.log('onSubmitPhotos');\r\n\t\tthis.submitPhotos(this.fbCollection);\r\n\t}\r\n\r\n\tpublic submitPhotos (collection:PhotoCollection) {\r\n\t\tconsole.log('SUBMIT PhotoCollection...', collection);\r\n\t\tlet url = ENV.HOST_API_URL + '/photos_post.php';\r\n\t\tthis.apiService.post(url, collection).subscribe((response:any) => {\r\n\t\t\tconsole.log('eventModel POST response recieved....', response);\r\n\t\t\tif (response && response.success) {\r\n\t\t\t\tthis.getPhotosFromTable(this.albumId);\r\n\t\t\t}\r\n\t\t});\r\n\t}\t\r\n\r\n\tpublic getPhotos (photoParams:PhotoParams, collection:Array<any>, isRepeat:boolean):Observable<DataEvent> {\r\n\t\tconsole.log('getPhotos....called with photoParams:', photoParams, 'COLLETION:::', collection);\r\n\t\tthis.message = 'In progress...';\r\n\t\t\r\n        if (!this.isValidDateRange(this.fromDate, this.toDate)) {\r\n        \tconsole.log('Invalid Date range!!!!');\r\n            this.message = 'Invalid Date range......';\r\n            return;\r\n        }\r\n\r\n        console.log('is valid date range', this.fromDate + ' : to : ' + this.toDate);\r\n        let since = moment(this.fromDate, ENV.DATE_TIME_FORMAT).unix();\r\n        let until = moment(this.toDate, ENV.DATE_TIME_FORMAT).unix();\r\n\t\tconsole.log('is valid date range', since + ' : to : ' + until);\r\n\r\n\r\n\t\tlet url = ENV.FB_GRAPH_URL + photoParams.albumId + '/photos';\r\n\t\tlet params  = new URLSearchParams(); //TODO: IE fix, polyfill\r\n\t\t\r\n\t\tparams.append('access_token', this.accessToken);\r\n\t\tparams.append('since', since.toString());\r\n\t\tparams.append('until', until.toString());\r\n\t\tparams.append('fields', photoParams.fields);\r\n\t\tparams.append('limit', photoParams.limit);\r\n\t\tparams.append('pretty', photoParams.pretty);\r\n\r\n\t\tif (photoParams.after !== '' && photoParams.nextUrl !== '') {\r\n\t\t\tconsole.log('after is present...ADDING after');\r\n\t\t\tparams.append('after', photoParams.after);\r\n\t\t}\r\n\t\turl = url + '?' + params.toString();\r\n\t\t\r\n\t\tconsole.log('url->', url);\t\t\r\n\r\n\t\tthis.apiService.fetch(url).subscribe(\r\n\t\t\t(response: any) => {\r\n\t\t\t\tconsole.log('getEvents RESPONSE ->', response);\r\n\t\t\t\tlet photos:any = response;\r\n\t\t\t\t\r\n\t\t\t\tif (photos && photos.data.length > 0) {\r\n\t\t\t\t\tlet data = photos.data;\r\n\t\t\t\t\tlet pagingData:PagingData = new PagingData(photos.paging);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.filter((dataModel:any)=>{ collection.push(dataModel)});\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (pagingData.next !== 'none') {\r\n\t\t\t\t\t\tconsole.log(collection.length, ':::pagingData.NEXT PRESENT');\r\n\t\t\t\t\t\tthis.photoParams.after = pagingData.cursors.after;\r\n\t\t\t\t\t\tthis.photoParams.nextUrl = pagingData.next;\r\n\t\t\t\t\t\treturn this.getPhotos(this.photoParams, collection, true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.photoParams.after = '';\r\n\t\t\t\t\t\tthis.photoParams.nextUrl = '';\r\n\t\t\t\t\t\tconsole.log('---------------------------------------------------- pagingData complete--------ALL DONE!!', collection);\r\n\t\t\t\t\t\tthis.dialogSubject.next({data: collection});\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.message = 'Complete!';\r\n\t\t\t\t\tconsole.log('-------------------------------------------ALL DONE!!', collection);\r\n\t\t\t\t\tthis.dialogSubject.next({data: collection});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t(err:any) => { \r\n\t\t\t\tthis.message = JSON.stringify(err);\r\n\t\t\t});\r\n\r\n\t\treturn this.dialogSubject;\r\n\t}\r\n\r\n\tpublic setLastEndTime () {\r\n\t\tlet total = this.photoCollection.photos.length;\r\n\t\tconsole.log('setLastEndTime', total);\r\n\t\tif (total > 0) {\r\n\t\t\tlet lastModel = this.photoCollection.photos[0];\r\n\t\t\tthis.fromDate = lastModel.createdTime;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic isValidDateRange (fromDate:string, toDate:string):Boolean {\t\t\r\n        if (moment(this.fromDate, ENV.DATE_TIME_FORMAT).isValid() && moment(this.toDate, ENV.DATE_TIME_FORMAT).isValid()\r\n            && (moment(this.fromDate, ENV.DATE_TIME_FORMAT).isBefore(moment(this.toDate, ENV.DATE_TIME_FORMAT)))) {\r\n            console.log('IS VALID DATE RANGE:', this.fromDate + ' : to : ' + this.toDate);\r\n            return true;\r\n        }\r\n\t\treturn false;\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport interface DataEvent {\r\n\r\n    data:any;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/photos/Photos.ts","module.exports = \"<section class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <form class=\\\"form-horizontal\\\">\\r\\n        <h3>{{albumName}}</h3>\\r\\n            \\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">Access token</label>\\r\\n                <div class=\\\"col-sm-10\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accessToken\\\" [(ngModel)]=\\\"accessToken\\\" name=\\\"accessToken\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n               <label class=\\\"col-sm-2 control-label\\\">From</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromDate\\\" [(ngModel)]=\\\"fromDate\\\" name=\\\"fromDate\\\">\\r\\n                </div>\\r\\n                <label class=\\\"col-sm-1 control-label\\\">To</label>\\r\\n                <div class=\\\"col-sm-2\\\">\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"toDate\\\" [(ngModel)]=\\\"toDate\\\" name=\\\"toDate\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <div class=\\\"col-sm-12\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-success\\\" value=\\\"Get Photos from Facebook\\\" (click)=\\\"onGetPhotosClick()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add ALL Photos to DB\\\" (click)=\\\"onSubmitPhotos()\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Get Photos from DB\\\" (click)=\\\"getPhotosFromTable('178838325568799')\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <h2 class=\\\"text-danger\\\">{{message}}</h2>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Events from Facebook</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"fbCollection.photos\\\">\\r\\n        Total: {{fbCollection.photos.length}}\\r\\n        <ul class=\\\"list-inline photo-container\\\">\\r\\n            <li *ngFor=\\\"let photoModel of fbCollection.photos;\\\">\\r\\n                <h4>#{{photoModel.id}}</h4>\\r\\n                <div class=\\\"btn-container\\\">\\r\\n                    <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Add\\\" (click)=\\\"onAddPhotoModel(photoModel)\\\">\\r\\n                </div>                 \\r\\n                <img class=\\\"img img-responsive\\\" src=\\\"{{photoModel.source}}\\\">\\r\\n                <div class=\\\"name\\\">{{photoModel.name}}</div>\\r\\n            </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <h4 class=\\\"text-danger\\\">Photos from Table</h4>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"photoCollection.photos\\\">\\r\\n        Total: {{photoCollection.photos.length}}\\r\\n        <ul class=\\\"list-inline photo-container\\\">\\r\\n          <li *ngFor=\\\"let photoModel of photoCollection.photos;\\\">\\r\\n            <h4>{{photoModel.uid}}</h4>\\r\\n            <div class=\\\"btn-container\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Delete\\\" (click)=\\\"onDeletePhotoModel(photoModel)\\\">\\r\\n                <input type=\\\"button\\\" class=\\\"btn btn-xs btn-warning\\\" value=\\\"Update\\\" (click)=\\\"onUpdatePhotoModel(photoModel)\\\">\\r\\n            </div>\\r\\n            <img class=\\\"img img-responsive\\\" src=\\\"{{imageHostPath}}{{photoModel.source}}\\\">\\r\\n            <div class=\\\"name\\\">{{photoModel.name}}</div>            \\r\\n          </li>\\r\\n        </ul>\\r\\n    </div>\\r\\n\\r\\n</section>\\r\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/photos/photos.html\n// module id = 506\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { Location} from '@angular/common';\r\nimport { Router, ActivatedRoute} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'admin-component',\r\n  template: require('./component.html'),\r\n  styles: [require('./component.css')]\r\n})\r\n\r\nexport class AdminComponent implements OnInit {\r\n\r\n    constructor (\r\n    \tprivate router:ActivatedRoute,\r\n\t\t  private route:Router,\r\n\t\t  private location:Location) {\r\n        console.log('< AdminComponent > Component called...');\r\n    }\r\n\r\n    ngOnInit () {\r\n       console.log('AdminComponent ::::');\r\n       this.router.queryParams.subscribe((params:any) => {\r\n\t       console.log('ngOnInit::val------------------:', params);\r\n\t       \tif (!isNaN(params.id)) {\r\n\t       \t\tconsole.log('ngOnInit::val------------------:Valid param id', params);\r\n\t       \t}\r\n\t    });\r\n    }\r\n\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/admin/component/AdminComponent.ts","module.exports = \"<router-outlet></router-outlet>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/admin/component/component.html\n// module id = 508\n// module chunks = 0"],"sourceRoot":""}